#
#implicit parameters
#
parameter.scope.label=Scope
parameter.scope.desc=The transformation scope (CELL | LINE | COLUMN | TABLE)

parameter.row_id.label=Row
parameter.row_id.desc=The row on which apply this action to

parameter.column_id.label=Column
parameter.column_id.desc=The column on which apply this action to

parameter.column_name.label=Column name
parameter.column_name.desc=The column name on which apply this action to

#
#transformations
#
action.absolute.label=Absolute value
action.absolute.desc=Compute the absolute value for all numeric values of this column.

action.absolute_float.label=Absolute value
action.absolute_float.desc=Compute the absolute value for all numeric values of this column.

action.absolute_int.label=Absolute value
action.absolute_int.desc=Compute the absolute value for all numeric values of this column.

action.cut.label=Remove part of the text...
action.cut.desc=Remove specified text from cells in this column

action.fillemptywithdefault.label=Fill empty cells with text...
action.fillemptywithdefault.desc=Fill empty cells of this column with given value

action.fillemptywithdefaultboolean.label=Fill empty cells with value...
action.fillemptywithdefaultboolean.desc=Fill empty cells of this column with given value

action.fillemptywithdefaultinteger.label=Fill empty cells with value...
action.fillemptywithdefaultinteger.desc=Fill empty cells of this column with given value

action.fillemptywithdefaultdate.label=Fill empty cells with value...
action.fillemptywithdefaultdate.desc=Fill empty cells of this column with given value

action.fillinvalidwithdefaultboolean.label=Fill invalid cells with value...
action.fillinvalidwithdefaultboolean.desc=Fill invalid cells of this column with given value

action.fillinvalidwithdefaultnumeric.label=Fill invalid cells with value...
action.fillinvalidwithdefaultnumeric.desc=Fill invalid cells of this column with given value

action.fillinvalidwithdefaultdate.label=Fill invalid cells with value...
action.fillinvalidwithdefaultdate.desc=Fill invalid cells of this column with given value

action.fillinvalidwithdefault.label=Fill invalid cells with value...
action.fillinvalidwithdefault.desc=Fill invalid cells of this column with given value

action.lowercase.label=Change case to lower
action.lowercase.desc=Converts all of the cell values in this column to lower case

action.uppercase.label=Change case to UPPER
action.uppercase.desc=Converts all of the cell values in this column to upper case

action.propercase.label=Change case to Title
action.propercase.desc=Converts all of the cell values in this column to title case (i.e. "data prep" -> "Data Prep") 

action.negate.label=Negate value
action.negate.desc=Reverse the boolean value of cells in this column

action.delete_empty.label=Delete lines with empty cell
action.delete_empty.desc=Delete rows that have this cell empty

action.delete_on_value.label=Delete lines that match...
action.delete_on_value.desc=Delete rows that have a specific value in cell in this column

action.delete_invalid.label=Delete lines with invalid cell
action.delete_invalid.desc=Delete rows that have this invalid cell

action.trim.label=Remove trailing and leading spaces
action.trim.desc=Remove trailing and leading spaces (i.e. trim)

action.round.label=Round value
action.round.desc=Round value to the closest integer

action.floor.label=Floor value
action.floor.desc=Round value to the largest integer value that is less than or equal to the argument

action.ceil.label=Ceil value
action.ceil.desc=Round value to the smallest integer value that is greater than or equal to the argument

action.round_down.label=Remove fractional part
action.round_down.desc=Round towards zero. Never increments the digit prior to a discarded fraction (i.e. truncates)

action.textclustering.label=Find and group similar text...
action.textclustering.desc=Replace all similar values with the right one (i.e. cluster)

action.domain_change.label=Change Domain
action.domain_change.desc=Change semantic domain of this column

action.type_change.label=Change Type
action.type_change.desc=Change type of this column

parameter.textclustering.title.1=We found these values
parameter.textclustering.title.2=And we'll keep this value

parameter.pattern.label=Pattern
parameter.pattern.desc=The pattern to cut in this column

parameter.empty_default_value.label=Value
parameter.empty_default_value.desc=The value to set in empty cells

parameter.invalid_default_value.label=Value
parameter.invalid_default_value.desc=The value to set in invalid cells

parameter.value.label=Value
parameter.value.desc=The value to search

#
# Replace on value action
#
action.replace_on_value.label=Replace cells that match...
action.replace_on_value.desc=Replace cells that have a specific value

parameter.cell_value.label=Current
parameter.cell_value.desc=The current cell value

parameter.replace_value.label=Replace
parameter.replace_value.desc=The new value to set

parameter.replace_entire_cell.label=Replace entire cell
parameter.replace_entire_cell.desc=Defines greedy level. If checked: will replace the entire cell, if not: on ly the part of the value that matches.

#
# rename action
#
action.rename_column.label=Rename
action.rename_column.desc=Rename this column

parameter.new_column_name.label=New name
parameter.new_column_name.desc=The new column name

#
# split action
#
action.split.label=Split the text in parts...
action.split.desc=Split column from separators

parameter.separator.label=Separator
parameter.separator.desc=Character to use as separator

parameter.manual_separator.label=Manual separator
parameter.manual_separator.desc=Choose your own separator

parameter.limit.label=Limit
parameter.limit.desc=Number of token to split the value in

#
# extract email domain action
#
action.extractemaildomain.label=Extract email tokens
action.extractemaildomain.desc=Extract local and domain parts from an email

#
# Duplicate column action
#
action.copy.label=Duplicate
action.copy.desc=Creates an exact copy of this column

#
# change date pattern action
#
action.change_date_pattern.label=Change date pattern
action.change_date_pattern.desc=Change date pattern to use on a date column

parameter.new_pattern.label=New date pattern to use
parameter.new_pattern.desc=Choose the date pattern to use in the list or make your own

parameter.custom_date_pattern.label=Enter your own date pattern
parameter.custom_date_pattern.desc=e.g. dd/MM/yyyy for day/month/year

#
# Extract date tokens action
#
action.extract_date_tokens.label=Extract date tokens
action.extract_date_tokens.desc=Creates columns with year, month, day, hour, minute, second, etc...

parameter.YEAR.label=Year
parameter.YEAR.desc=Extracts year field

parameter.MONTH.label=Month of year
parameter.MONTH.desc=Extracts month of year field

parameter.DAY.label=Day of month
parameter.DAY.desc=Extracts day of month field

parameter.HOUR_12.label=Hour of am-pm
parameter.HOUR_12.desc=Extracts the hour within the AM/PM, from 0 to 11

parameter.AM_PM.label=The am-pm-of-day
parameter.AM_PM.desc=Extracts the AM/PM within the day, from 0 (AM) to 1 (PM)

parameter.HOUR_24.label=Hour of day
parameter.HOUR_24.desc=Extracts the hour within the day, from 0 to 23

parameter.MINUTE.label=Minute
parameter.MINUTE.desc=Extracts minute of hour

parameter.SECOND.label=Second
parameter.SECOND.desc=Extracts second of minute

parameter.DAY_OF_WEEK.label=Day of week
parameter.DAY_OF_WEEK.desc=Extracts the day of week, such as Tuesday

parameter.DAY_OF_YEAR.label=Day of year
parameter.DAY_OF_YEAR.desc=Extracts the day of year. This has values from 1 to 365 in standard years and 1 to 366 in leap years

parameter.WEEK_OF_YEAR.label=Week of year
parameter.WEEK_OF_YEAR.desc=Extracts concept of the count of weeks within the period of a year where the weeks are aligned to the start of the year

#
# Substring action
#
action.substring.label=Substring
action.substring.desc=Extracts substring in a new column

parameter.from_mode.label=From
parameter.from_mode.desc=Select beginning mode of the substring

parameter.from_index.label=Beginning index
parameter.from_index.desc=Index of the original value that starts the new one

parameter.to_mode.label=To
parameter.to_mode.desc=Select end mode of the substring

parameter.to_index.label=End index
parameter.to_index.desc=Index of the original value that ends the new one

#
# Compute length action
#
action.compute_length.label=Compute length
action.compute_length.desc=Extracts the number of digits of this column

#
# Compute time since action
#
action.compute_time_since.label=Compute time since
action.compute_time_since.desc=Computes elapsed time since this date, in the desired unit (year, month, day, hour)

parameter.time_unit.label=Time unit
parameter.time_unit.desc=The unit in which you want the result

#
# Extract url tokens
#
action.extract_url_tokens.label=Extract url tokens
action.extract_url_tokens.desc=Extracts protocol, host, port, query, etc... from an url in separated columns

#
# Compute timestamp to date
#
action.timestamp_to_date.label=Compute timestamp to date
action.timestamp_to_date.desc=Given a timestamp (ellapsed time since epoch in second), will create a new column with the date

#
# Remove non numeric chars
#
action.remove_non_num_chars.label=Remove all non numeric characters
action.remove_non_num_chars.desc=For example €10.5k will become 10.5

#
# Remove non alpha-numeric chars
#
action.remove_non_alpha_num_chars.label=Remove all non alpha numeric characters
action.remove_non_alpha_num_chars.desc=For example €10.5k will become 105


#
# Normalize
#
action.normalize.label=Simplify Text (remove case, accent, etc.)
action.normalize.desc=Simplify content of this column (ie: François -> francois)

#
# Concat
#
action.concat.label=Concatenate with...
action.concat.desc=Combine this column with another one

parameter.selected_column.label=Column
parameter.selected_column.desc=Combine the current column with this one

parameter.prefix.label=Prefix
parameter.prefix.desc=Optional new column prefix

parameter.concat_separator.label=Separator
parameter.concat_separator.desc=Optional new column separator

parameter.suffix.label=Suffix
parameter.suffix.desc=Optional new column suffix

#
# matches pattern action
#
action.matches_pattern.label=Matches Pattern
action.matches_pattern.desc=Creates a new column fill with <i>true</i> or <i>false</i> regarding if the value matches or not given pattern

parameter.proposed_pattern.label=Pattern
parameter.proposed_pattern.desc=Pattern to use

parameter.manual_pattern.label=Manual pattern
parameter.manual_pattern.desc=Set your own pattern

#
# Delete negative values
#
action.delete_negative_values.label=Remove negative values
action.delete_negative_values.desc=Lines with a negative value in this column will be deleted

#
# Numeric operations
#
action.numeric_ops.label=Add, multiply, substract or divide
action.numeric_ops.desc=Add (+), multiply (x), substract (-), or divide(/) this column with another or with a fixed value

parameter.operator.label=Operator
parameter.operator.desc=Operator to use for this operation

parameter.mode.label=Compute with...
parameter.mode.desc=Select if you want to compute against a constant value or to another column

parameter.operand.label=Operand
parameter.operand.desc=Fixed value to use as operand
