<?xml version="1.0"?>
<testsuite name="PhantomJS 2.1.1 (Linux 0.0.0)" package="" timestamp="2017-12-07T08:58:54" id="0" hostname="tlnd-cgall" tests="2267" errors="0" failures="0" time="76.576">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/538.1 (KHTML, like Gecko) PhantomJS/2.1.1 Safari/538.1"/>
  </properties>
  <testcase name="Breadcrumb component render should render about modal" time="0.038" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render should render about modal title" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render should render data-prep icon" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render should render data-prep current version" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render should render data-prep copyrights" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render should render toggle button" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render no builds list should not render builds list" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render no builds list should render more button" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render with builds list should render builds list" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render with builds list should render less button" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render clicks should display table on more button click" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="Breadcrumb component render clicks should hide table on less button click" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb component"/>
  <testcase name="about controller should toggle build details display" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).about controller"/>
  <testcase name="about controller should populate build details on controller instantiation" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).about controller"/>
  <testcase name="Http Error component render should not render if no status" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Http Error component"/>
  <testcase name="Http Error component render should render 404 error" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Http Error component"/>
  <testcase name="App directive should hold toaster container" time="0.118" classname="PhantomJS_2_1_1_(Linux_0_0_0).App directive"/>
  <testcase name="App directive should hold loader element" time="0.068" classname="PhantomJS_2_1_1_(Linux_0_0_0).App directive"/>
  <testcase name="App directive should hold svg icons" time="0.062" classname="PhantomJS_2_1_1_(Linux_0_0_0).App directive"/>
  <testcase name="App directive should render router insertion point" time="0.085" classname="PhantomJS_2_1_1_(Linux_0_0_0).App directive"/>
  <testcase name="Datagrid directive on data change init should init grid" time="0.04" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change init should init grid only once" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change init should init tooltip ruler" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change grid update column creation should create new columns" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change grid update column creation should reset renew all columns flag" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change grid update column size should auto size created columns (and set them in grid, done by autosize() function)" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change grid update should execute the grid update only once when the second call is triggered before the first timeout" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on data change grid update should focus on wanted column (not necessarily the selected column) in async mode with a 500ms delay" time="0.056" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on metadata change should scroll to top" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on metadata change should force column recreation (no reuse)" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on resize should resize grid canvas on lookup visibility change" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on resize should change grid height on lookup visibility change" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on filter change should reset cell styles" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on filter change should scroll to top" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on filter change should update grid range index for future preview" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change should set active cell in grid" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change grid style should reset grid styles when there is no selected line" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change grid style should only update columns styles (not the entire grid style) when there is a selected line" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change grid style should only update columns styles when there is more than one selected column" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change grid style should only update columns styles when there is no selected column" time="0.035" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change highlight should reset highlighted cells on active cell change" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change highlight should highlight cells containing the same value as selected cell in async mode with a 500ms delay" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change highlight should NOT highlight cells when in preview mode" time="0.025" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change highlight should NOT highlight cells when there is no selected line" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change suggestion panel should update suggestions panel in async mode" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid directive on grid selection change suggestion panel should NOT update suggestion panel when in preview mode" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid directive"/>
  <testcase name="Datagrid header controller init transformation should refresh domains and types" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller init transformation should get and init only &quot;column_metadata&quot; category transformations" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller init transformation should NOT get transformations if transformations are being fetched" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller init transformation should NOT get transformations if transformations are already initialized" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller init transformation should change inProgress and error flags on error" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should update column name" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should turn off edition mode after name update" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should return true when name has changed and is not empty" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should return false when name is unchanged" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should return false when name is falsy" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should update edition mode to true" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should update edition mode to false" time="0.025" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller update column name should reset name when edition mode is set to true" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header controller filter should add filter" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header controller"/>
  <testcase name="Datagrid header directive should display column title and domain" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should display column title and type when there is no domain" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should close dropdown on get transform list error" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should show input to rename column name when double click" time="0.025" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should select input text when edition mode is tuned on" time="0.023" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should switch from input to text on ESC keydown" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should reset column name on ESC keydown" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should switch from input to text on ENTER event without changes" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should submit update on ENTER with changes" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should switch from input to text on BLUR event without changes" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should submit update on BLUR event with changes" time="0.044" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should stop click propagation in input" time="0.024" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should hide menu on left click on grid-header" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should show menu on right click on grid-header if menu is hidden" time="0.031" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive should hide menu on right click if menu is visible" time="0.025" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar should render quality bar" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar empty menu should render empty menu content" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar empty menu should trigger addFilter callback on 1st item menu click" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar empty menu should delete rows on 2nd item menu click" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar invalid menu should render invalid menu content" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar invalid menu should trigger addFilter callback on 1st item menu click" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid header directive quality bar invalid menu should clear invalid cells on 2nd item menu click" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid header directive"/>
  <testcase name="Datagrid index header Component should render index filter menu" time="0.032" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid index header Component"/>
  <testcase name="Datagrid index header controller should create invalid_records filter" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid index header controller"/>
  <testcase name="Datagrid index header controller should create empty_records filter" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid index header controller"/>
  <testcase name="Datagrid index header controller should create invalid_empty_records filter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid index header controller"/>
  <testcase name="Datagrid Message Component should render insertion-datagrid-message" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid Message Component"/>
  <testcase name="Datagrid Message Component should render content" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid Message Component"/>
  <testcase name="Datagrid Message Component should call removeAllFilters" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid Message Component"/>
  <testcase name="Datagrid Message Component should NOT render datagrid-message" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid Message Component"/>
  <testcase name="Single column resize plugin should attach onHeaderCellRendered listener" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Single column resize plugin"/>
  <testcase name="Single column resize plugin should save columns &quot;resizable&quot; original values on dragstart" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Single column resize plugin"/>
  <testcase name="Single column resize plugin should restore columns &quot;resizable&quot; original values on dragend" time="0" classname="PhantomJS_2_1_1_(Linux_0_0_0).Single column resize plugin"/>
  <testcase name="Datagrid column service on creation should add SlickGrid header destroy handler" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on creation should add SlickGrid header creation handler" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service create columns should create new preview grid columns" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service create columns should create new grid columns" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header destroy event should do nothing when column is part of a preview" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header destroy event should destroy header when renewAllFlag is set to true" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header destroy event should detach header when renewAllFlag is set to false" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header destroy event should NOT detach header for index column" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header rendered event should attach and update available header that has the same id" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header rendered event should create and attach a new header" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header rendered event should do nothing if column is from preview" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column header rendered event should create and attach index column header" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should call PlaygroundService move columns 2 steps" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should find move columns 2 steps" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should find move columns simple swap" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should find move columns 3 steps" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should find not moved" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should find move columns 2 steps backward" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid column service on column reorder event should find move columns 2 steps backward in the middle" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid column service"/>
  <testcase name="Datagrid external service on creation should add scroll listener" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update grid range index should add scroll listener" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel tab selection should select &quot;COLUMN&quot; tab if no tab is provided" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel tab selection should select &quot;LINE&quot; tab when there is no selected column" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel tab selection should init dataset tab actions" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel charts should reset charts when there is no selected column" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel charts should update charts when there is a selected column" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel charts should reset statistics when multiple columns are selected" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations line scope should update when there is a selected line" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations line scope should NOT update when there is no selected line" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations line scope should NOT update when selected line has not changed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations column scope should update when there is a selected column" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations column scope should save selected column in LocalStorage" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations column scope should NOT update when there is no selected column" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid external service update right panel transformations column scope should NOT update when selected column has not changed" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid external service"/>
  <testcase name="Datagrid grid service on creation should init the other datagrid services" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid grid service"/>
  <testcase name="Datagrid grid service on creation should add grid listeners" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid grid service"/>
  <testcase name="Datagrid grid service grid handlers should update row count and render grid on row count change" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid grid service"/>
  <testcase name="Datagrid grid service grid handlers should invalidate rows and render grid on rows changed" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid grid service"/>
  <testcase name="Datagrid grid service column navigation for focus purposes should go to the selected column after" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid grid service"/>
  <testcase name="Datagrid grid service column navigation for focus purposes should do nothing when no column should be focused" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid grid service"/>
  <testcase name="Datagrid size service on creation should add grid column resize listener" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid size service on creation should add window resize listener" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid size service on event should resize grid canvas when window is resized" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid size service on event should save sizes in localStorage when column is resized" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid size service auto size columns should set column sizes from localStorage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid size service auto size columns should set column min width when there is no saved sizes" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid size service auto size columns should set column min width when this column is not in the localStorage entries" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid size service"/>
  <testcase name="Datagrid style service reset cell styles should reset cell styles configuration" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service reset cell styles should reset grid active cell" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service highlight cells should set highlight configuration" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service highlight cells should invalidate all rows when there is no cell editor" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service highlight cells should invalidate all rows except the currently edited one" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service update column styles should set &quot;selected&quot; class on active column header" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service update column styles should set &quot;selected&quot; class on active cell column when this is NOT a preview" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service update column styles should set &quot;number&quot; class on number column" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service reset style should reset cell styles" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service reset style should update column styles" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter should adapt value into html with leading/trailing spaces management" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter should adapt value into html on empty cell" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter indicator should add invisible rectangle on valid value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter indicator should add red rectangle on invalid value" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter new should add &quot;new&quot; class on a new row" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter new should add &quot;new&quot; class on a new cell" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter update should add &quot;update&quot; class on an updated cell" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter deleted should add &quot;deleted&quot; class on deleted row" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter deleted should add &quot;delete&quot; class on a deleted cell" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter highlight should add &quot;highlight&quot; class" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter highlight should NOT add &quot;highlight&quot; class if the column is not the target" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column formatter highlight should NOT add &quot;highlight&quot; class if content does not match" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column preview style should return &quot;new&quot; column style" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column preview style should return &quot;deleted&quot; column style" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column preview style should return &quot;updated&quot; column style" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid style service column preview style should return empty string on no change diff" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid style service"/>
  <testcase name="Datagrid tooltip service on initialization should attach listeners to the grid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should NOT show tooltip when no cell correspond to the event" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should NOT show tooltip with content that fit in the box (column 0)" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should show trailing spaces in the tooltip (column 1)" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should show tooltip after a 300ms delay with long line content (column 2)" time="0.029" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should show tooltip after a 300ms delay with multiple line content (column 3)" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should NOT show tooltip with empty content (column 4)" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse enter should show tooltip after a 300ms delay with column tdpId" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse leave should hide tooltip after a 300ms delay" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Datagrid tooltip service on mouse leave should cancel existing update promise" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid tooltip service"/>
  <testcase name="Dataset Import controller $onChanges with location type should get data store form" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller $onChanges with location type should get data set form if test connection button is disabled" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller $onChanges with item should retrieve forms" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormChange should refresh parameters" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormChange should not refresh parameters if promise fails" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormSubmit should test connection ok" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormSubmit should test connection fail" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormSubmit should do nothing if datastore form without button is submitted" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormSubmit should create dataset" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormSubmit should edit dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatastoreFormSubmit should refresh dataset" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatasetFormChange should refresh dataset form" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset Import controller onDatasetFormSubmit should trigger datastore form submit button" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Import controller"/>
  <testcase name="Dataset parameters controller separator in list should return true when current separator is an item of the separators list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters controller"/>
  <testcase name="Dataset parameters controller separator in list should return false when current separator is NOT an item of the separators list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters controller"/>
  <testcase name="Dataset parameters controller separator in list should return false when current separator is falsy" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters controller"/>
  <testcase name="Dataset parameters controller validate should return true when current separator is an item of the separators list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters controller"/>
  <testcase name="Dataset parameters directive render should render title" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render should render dataset name" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render should render nb lines" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render should render cut lines number when dataset is truncated" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render should not render dataset nb lines" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render should render encodings" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render separator should NOT render separators on NON csv" time="0.03" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render separator should render separators on csv dataset" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render separator should render custom separator input only when separator is not in the configuration list" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render button should enable button when processing is falsy" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive render button should disable button when processing is truthy" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset parameters directive validation should call validation callback on form submit" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset parameters directive"/>
  <testcase name="Dataset xls preview controller bindings should bind modal visibility flag getter to DatasetSheetPreviewService.showModal" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller bindings should bind modal visibility flag setter to DatasetSheetPreviewService.showModal" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller bindings should bind metadata getter to DatasetSheetPreviewService.currentMetadata" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller bindings should bind selectedSheetName getter to DatasetSheetPreviewService.selectedSheetName" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller bindings should bind selectedSheetName setter to DatasetSheetPreviewService.selectedSheetName" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller select sheet should load the selected sheet preview" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller validation should set the selected sheet to the dataset" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller validation should hide modal" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller validation should open dataset" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset xls preview controller validation should open preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset xls preview controller"/>
  <testcase name="Dataset upload list directive should init grid " time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload list directive"/>
  <testcase name="Dataset upload list directive should init metadata name input" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload list directive"/>
  <testcase name="Dataset upload list directive should init sheet listbox" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload list directive"/>
  <testcase name="Dataset upload tile directive should render progressing upload dataset" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload tile directive"/>
  <testcase name="Dataset upload tile directive should show profiling data message once the upload reaches the 100%" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload tile directive"/>
  <testcase name="Dataset upload tile directive should render progressing remote dataset import" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload tile directive"/>
  <testcase name="Dataset upload tile directive should render upload error dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset upload tile directive"/>
  <testcase name="Bozo the clown directive should render bozo the clown gif" time="0.025" classname="PhantomJS_2_1_1_(Linux_0_0_0).Bozo the clown directive"/>
  <testcase name="StarWars directive should render star wars div" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).StarWars directive"/>
  <testcase name="Export controller property binding should bind stepId getter to state" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller selectType should init parameters (type)" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller selectType should show modal" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller saveAndExport should set action in form" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller saveAndExport should submit form" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller saveAndExport should extract selected parameters" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller saveAndExport should allow empty parameters" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller saveAndExport should save selected parameters" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller launch default export should set action in form" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller launch default export should submit form" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller launch default export should extract selected parameters" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller launchExport should extract selected parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller launchExport should set action in form" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export controller launchExport should submit form" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export controller"/>
  <testcase name="Export directive form should inject preparation id input" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive form should inject step id input" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive form should inject dataset id input" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive form should inject export type input" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive form should set form in controller" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive launch export should launch a csv export" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive disabled export should have disabled style" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Export directive disabled export should have disabled message" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export directive"/>
  <testcase name="Feedback controller feedback  should initialize feedback" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback controller feedback  should send feedback" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback controller feedback  should manage sending flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback controller feedback  should close feedback modal on send success" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback controller feedback  should show message on send success" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback controller feedback  should save user mail" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback controller feedback  should reset form on send success" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback controller"/>
  <testcase name="Feedback directive should render a feedback form" time="0.034" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback directive"/>
  <testcase name="Feedback directive should render form labels" time="0.038" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback directive"/>
  <testcase name="Feedback directive should render form buttons" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback directive"/>
  <testcase name="Feedback directive should render form title" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback directive"/>
  <testcase name="Filter bar directive should render &quot;remove all&quot; icon when there are filters" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter bar directive"/>
  <testcase name="Filter bar directive should NOT render &quot;remove all&quot; icon when there are not filters" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter bar directive"/>
  <testcase name="Filter bar directive should execute reset callback on &quot;remove all&quot; icon click" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter bar directive"/>
  <testcase name="Filter bar directive should render filter search" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter bar directive"/>
  <testcase name="Filter bar directive should render filter list" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter bar directive"/>
  <testcase name="Filter bar directive should render filter monitor" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter bar directive"/>
  <testcase name="Filter Item Component editable option should render editable values with inputs" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter Item Component editable option should submit editable value while pressing enter key" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter Item Component editable option should call onEdit when a value has changed" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter Item Component editable option should render non-editable values with spans" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter Item Component removable option should render badge close button" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter Item Component removable option should call onClose when badge close button is clicked" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter Item Component removable option should not render badge close button" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Component"/>
  <testcase name="Filter item controller should set the sign character to : in" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should set the sign character to : &quot;:&quot;" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should set the sign character to : &quot;≅&quot;" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should set the sign character to : &quot;=&quot; " time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should execute edit callback when submit is called" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should execute edit callback when remove is called" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should execute remove callback when close is called" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should return class by filter type" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter item controller should return class by filter type in the case of quality filter" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item controller"/>
  <testcase name="Filter Item Value Component editable option should render editable value with input" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter Item Value Component editable option should render non-editable value with span" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter Item Value Component editable option should render empty value with span with specific class" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter Item Value Component removable option should render remove button" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter Item Value Component removable option should render hidden remove button" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter Item Value Component removable option should render remove button when removable option has changed" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter Item Value Component removable option should call onRemove callback when button is clicked" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Item Value Component"/>
  <testcase name="Filter item value controller should reset value if ESC key is pressed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item value controller"/>
  <testcase name="Filter item value controller should execute edit callback if ENTER key is pressed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item value controller"/>
  <testcase name="Filter item value controller should do nothing if key is pressed and it is not ESC or ENTER keys" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item value controller"/>
  <testcase name="Filter item value controller should return value with grid constraints" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter item value controller"/>
  <testcase name="filter list controller should call filter change callback" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter list controller"/>
  <testcase name="filter list controller should call filter change callback" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter list controller"/>
  <testcase name="Filter list directive should render filter list badges" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter list directive"/>
  <testcase name="Filter monitor directive render should render filters label" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter monitor directive"/>
  <testcase name="Filter monitor directive render should NOT render &quot;remove all&quot; icon when filters are empty" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter monitor directive"/>
  <testcase name="Filter monitor directive render should render stats" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter monitor directive"/>
  <testcase name="Filter monitor directive actions should execute reset callback on &quot;toogle&quot; icon click" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter monitor directive"/>
  <testcase name="filter search controller should create sorted suggestions based on case insensitive typed word and current data from service" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter search controller"/>
  <testcase name="filter search controller should create sorted suggestions based on typed word with wildcard" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter search controller"/>
  <testcase name="filter search controller should return empty array if typed string is empty" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter search controller"/>
  <testcase name="filter search controller should reset input search on item selection" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter search controller"/>
  <testcase name="filter search controller should add filter on item selection" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).filter search controller"/>
  <testcase name="Filter search directive should render input with auto-complete" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter search directive"/>
  <testcase name="Filter search directive should stop propagation on ESC key down" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter search directive"/>
  <testcase name="Filter search directive should propagate on key down other than ESC" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter search directive"/>
  <testcase name="Filter search directive should empty the input filter search" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter search directive"/>
  <testcase name="Folder creator container should render folder creator form in a modal" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder creator container"/>
  <testcase name="Folder creator form component render should render folder creator content" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder creator form component"/>
  <testcase name="Folder Creator Form Controller should init name" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Creator Form Controller"/>
  <testcase name="Folder Creator Form Controller createFolder should commit form value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Creator Form Controller"/>
  <testcase name="Folder Creator Form Controller createFolder should create folder" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Creator Form Controller"/>
  <testcase name="Folder Creator Form Controller createFolder should toggle folder creator" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Creator Form Controller"/>
  <testcase name="Folder Creator Form Controller createFolder should refresh current folder" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Creator Form Controller"/>
  <testcase name="folder selection component should render input search" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).folder selection component"/>
  <testcase name="folder selection component should render loader" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).folder selection component"/>
  <testcase name="folder selection component should render folder tree" time="0.043" classname="PhantomJS_2_1_1_(Linux_0_0_0).folder selection component"/>
  <testcase name="folder selection component should render search items" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).folder selection component"/>
  <testcase name="Folder selection controller initialization should open path to selected folder" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller initialization should update selected folder" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller initialization should select HOME when ngModel is not set" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller initialization should select HOME when ngModel folder id not in tree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller toggle should toggle the folder opened flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller choose folder should unselect previous folder" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller choose folder should update selectedFolder" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller choose folder should update new selected folder flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller search should init search items with search result" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller search should init perform search with empty array when search result is empty" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller search should save previously selected folder" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller search should select first folder in result" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller search should reset search items when search query is empty" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder selection controller search should set back saved folder as selected when search query is empty" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder selection controller"/>
  <testcase name="Folder Tree Node Component should display the name" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component should display the path next to the name if provided" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component selected should highlight selected folder" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component selected should NOT highlight NOT selected folder" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component caret should render an empty caret when there is no children" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component caret should render a collapsed caret" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component caret should render an opened caret" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component icon should render a closed folder" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component icon should render an opened folder" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component level padding should render a left space corresponding to the level" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component toggle should trigger callback on caret simple click" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component toggle should trigger callback on line double click" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component select should trigger callback on name click" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component select should trigger callback on icon click" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Node Component select should trigger callback on folder image simple click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Node Component"/>
  <testcase name="Folder Tree Component should render node" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component children should render children when node has some and is opened" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component children should NOT render children when node has some and is closed" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component children should NOT render children when node has no children" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component toggle should trigger callback on current node toggle" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component toggle should trigger callback on children toggle" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component select should trigger callback on current node selection" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="Folder Tree Component select should trigger callback on children selection" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Tree Component"/>
  <testcase name="History control directive should attach undo to Ctrl+Z shortcut" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).History control directive"/>
  <testcase name="History control directive should attach redo to Ctrl+Y shortcut" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).History control directive"/>
  <testcase name="History control directive should unregister listener on destroy" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).History control directive"/>
  <testcase name="Home Dataset Container should render dataset-list" time="0.088" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home Dataset Container"/>
  <testcase name="Home Dataset Container should render inputUpdateDataset" time="0.041" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home Dataset Container"/>
  <testcase name="Home component should hold dataset-xls-preview" time="0.065" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home component should hold folder-creator" time="0.05" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home component should hold preparation-copy-move" time="0.052" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home component should hold preparation-creator" time="0.087" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home component should inject home insertion point" time="0.055" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home component should instanciate app layout with an ui insertion point" time="0.051" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home component should instantiate home dataset progress bar" time="0.049" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home component"/>
  <testcase name="Home controller should configure side panel" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home controller"/>
  <testcase name="Name Modal component render should NOT render name modal" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Name Modal component"/>
  <testcase name="Name Modal component render should render name modal" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Name Modal component"/>
  <testcase name="Home Preparation Container should render breadcrumbs" time="0.033" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home Preparation Container"/>
  <testcase name="Home Preparation Container should render preparation-list" time="0.059" classname="PhantomJS_2_1_1_(Linux_0_0_0).Home Preparation Container"/>
  <testcase name="InventoryCopyMove component render should render copy/move elements" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove component"/>
  <testcase name="InventoryCopyMove component form should disable submit buttons when form is invalid" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove component"/>
  <testcase name="InventoryCopyMove component form move should move item on move button click" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove component"/>
  <testcase name="InventoryCopyMove component form move should disable submit buttons while moving" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove component"/>
  <testcase name="InventoryCopyMove component form copy should copy item on copy button click" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove component"/>
  <testcase name="InventoryCopyMove component form copy should disable submit buttons while copying" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove component"/>
  <testcase name="InventoryCopyMove controller isActionDisabled should return true if isLoading true" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller isActionDisabled should return true if copyMoveForm is invalid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller isActionDisabled should return true if isMoving is true" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller isActionDisabled should return true if isCopying is true" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller copy should not call copy service" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller copy should call copy service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller copy should manage cloning flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller copy should reset flag and focus on input when copy fails" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller move should not call copy service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller move should call move service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller move should manage moving flag" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="InventoryCopyMove controller move should reset flag and focus on input when copy fails" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryCopyMove controller"/>
  <testcase name="Inventory header component sort control should render sort switch" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory header component"/>
  <testcase name="Inventory header component sort control should call sort change callback on sort switch click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory header component"/>
  <testcase name="Inventory header component sort control should call order change callback on order switch click" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory header component"/>
  <testcase name="InventoryItem component dataset icon icon should select CSV icon" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon icon should select XLS icon" time="0.023" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon icon should select JOB icon" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon icon should select JOB icon for components tag" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon icon should not display update for job dataset" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon should display inventory icon without certification pin" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon should display inventory icon with certification pin" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon should display inventory details" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon should display favorite icon" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component dataset icon should NOT display favorite icon" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="InventoryItem component documentation display inventory components" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).InventoryItem component"/>
  <testcase name="Inventory Item controller should return tag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Item controller"/>
  <testcase name="Inventory Item controller should return type" time="0.032" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Item controller"/>
  <testcase name="Inventory Tile Component render should render an editable title" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should render an fixed (non editable) title" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should render the details" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should render the favorite icon" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should NOT render the favorite icon" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should render the clone icon" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should NOT render the clone icon" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should render the remove icon" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component render should NOT render the remove icon" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component events should call click callback" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component events should call title click callback" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component events should call clone callback" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component events should call favorite callback" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Inventory Tile Component events should call remove callback" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory Tile Component"/>
  <testcase name="Loader component render should render loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Loader component"/>
  <testcase name="Loader component render should render another key" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Loader component"/>
  <testcase name="Lookup DatasetList component should render add dataset checkbox" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup DatasetList component"/>
  <testcase name="Lookup DatasetList component should render dataset list" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup DatasetList component"/>
  <testcase name="Lookup Dataset list controller should toogle the selection of lookup dataset" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Dataset list controller"/>
  <testcase name="Lookup Dataset list controller should not toogle the selection of the lookup dataset if dataset is disabled" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Dataset list controller"/>
  <testcase name="Lookup Dataset list controller should not filter when search-text is empty" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Dataset list controller"/>
  <testcase name="Lookup Dataset list controller should filter datasets" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Dataset list controller"/>
  <testcase name="Lookup Dataset list controller should call filterDatasets on $onChanges" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Dataset list controller"/>
  <testcase name="Lookup datagrid header controller should show the checkboxes" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid header controller"/>
  <testcase name="Lookup datagrid header controller should hide the checkboxes" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid header controller"/>
  <testcase name="Lookup datagrid header controller should update the array of the selected columns to be added to the lookup" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid header controller"/>
  <testcase name="Dataset column header directive should checkbox checked" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset column header directive"/>
  <testcase name="Dataset column header directive should checkbox UNchecked" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset column header directive"/>
  <testcase name="Dataset column header directive should display column title and type when there is no domain" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset column header directive"/>
  <testcase name="Dataset column header directive should select checkbox when clicking on add-to-lookup div" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset column header directive"/>
  <testcase name="Dataset column header directive should uncheck checkbox when clicking on add-to-lookup div and the column is already selected" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset column header directive"/>
  <testcase name="Lookup datagrid directive on data change init should init grid" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change init should init grid only once" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change grid update column creation should create new columns" time="0.058" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change grid update column style should reset cell styles when there is a selected column" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change grid update column style should reset cell styles when there is NOT a selected cell" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change grid update column style should update selected column style" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change grid update with new columns should create new columns" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup datagrid directive on data change grid update should execute the grid update only once when the second call is triggered before the first timeout" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup datagrid directive"/>
  <testcase name="Lookup Datagrid column service on creation should add SlickGrid header creation handler" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid column service"/>
  <testcase name="Lookup Datagrid column service on column header rendered event should create and attach a new header" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid column service"/>
  <testcase name="Lookup Datagrid column service on column header rendered event should do nothing if column is index column" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid column service"/>
  <testcase name="Lookup Datagrid grid service on creation should init the other datagrid services" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid grid service"/>
  <testcase name="Lookup Datagrid grid service on creation should add grid listeners" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid grid service"/>
  <testcase name="Lookup Datagrid style service on creation should add header click listener" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on creation should add header right click listener" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on creation should add active cell changed listener" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on header click event should reset cell styles" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on header click event should set selected column class" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on header click event should invalidate grid" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on header right click event should set reset cell styles" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on header right click event should set selected column class" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on header right click event should invalidate grid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on active cell changed event should set &quot;selected&quot; column class" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on active cell changed event should NOT change &quot;selected&quot; column class if it has not changed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on active cell changed event should invalidate grid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service on active cell changed event should do nothing when there is no active cell" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service update column styles should set &quot;selected&quot; class on active cell column when this is NOT a preview" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service update column styles should set &quot;number&quot; class on number column" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service column formatter should adapt value into html with leading/trailing spaces management" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service column formatter should add invisible rectangle on valid value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service column formatter should add red rectangle on invalid value" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup Datagrid style service column formatter should add red rectangle on invalid value case of non TEXT domains (ieemail address)" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup Datagrid style service"/>
  <testcase name="Lookup controller select an action should load lookup from the step" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller select an action should load lookup from the action" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller preview should trigger lookup preview" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller preview should trigger lookup preview update" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller validation should cancel and deactivate preview" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller validation should reactivate preview after the operation with a delay of 500ms" time="0.031" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller validation should add new lookup action" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller validation should update lookup action" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller utils should return the action name" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller add datasets  show modal on click" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller add datasets  should add datasets and close the modal" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller add datasets  should refresh lookup panel after adding datasets" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller add datasets  should update sort by" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller add datasets  should update sort order" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup controller add datasets  should refresh sort parameters" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup controller"/>
  <testcase name="Lookup directive should disable submit button when the lookup is initiated" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Lookup directive should enable submit button when the 2 columns are selected" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Lookup directive should disable submit button when there is no more selected columns" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Lookup directive should disable submit button when the tdpId column is selected" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Lookup directive should enable submit button when the there are 2 columns selected and the tdpId is not selected" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Lookup directive should disable submit button when in the main dataset the tdpId is selected" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Lookup directive should enable submit button when there are columns checked, the tdpId is not selected neither in the main nor in the lookup" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup directive"/>
  <testcase name="Playground header component preview badge should NOT be rendered" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component preview badge should be rendered" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component left header should render editable text on preparation title" time="0.032" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component left header should render preparation title on readonly mode" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header dataset parameters toggle button looks inactive by default" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header dataset parameters toggle button looks active when its panel is shown" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should call parameters callback" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header lookup toggle button looks inactive by default" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header lookup toggle button looks active when its panel is shown" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should call lookup callback" time="0.042" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should render preparation picker icon" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should call showPreparationPicker callback" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should call close callback" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should render export" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should NOT render export" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should render history control" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground header component right header should NOT render preview badge" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground header component"/>
  <testcase name="Playground controller initialization preparation should set previous route to preparations home" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller recipe header should create/update preparation with clean name on name edition confirmation" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller recipe header should change route to preparation route on name edition confirmation" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller recipe header should not call service create/updateName service if name is blank on name edition confirmation" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller lookup should load lookup panel when it is hidden" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller lookup should display lookup panel when it is hidden" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller lookup should hide lookup panel when it is visible" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller apply other preparation steps should update the display modal state" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller apply other preparation steps should fetch compatible preparations" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller apply other preparation steps should copy reference steps" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller apply other preparation steps should hide picker after steps copy" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close before close should reset and redirect with NOT implicit preparation" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close before close should show preparation save/discard modal with implicit preparation if there are steps" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close before close should discard the preparation if there are no steps" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close discard preparation should call startLoader" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close discard preparation should call stopLoader" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close discard preparation should delete current preparation" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close discard preparation should reset and redirect to previous route" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should determinate if submit is disabled" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should determinate if submit is enabled" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should change preparation name when destination is home" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should move preparation when destination has changed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should reset and redirect to previous route" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should determinate when submit is loading" time="0.033" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller close save preparation should manage isSaving flag" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller feedback should open feedback modal" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller onboarding should start onboarding tour" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller dataset parameters should open dataset parameters" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller dataset parameters should manage progress flag" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller dataset parameters should call parameter change function" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller dataset parameters should hide dataset parameters" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller preview in progress should check if preview is in progress" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller Name Validation Modal should show Name Validation modal" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller Name Validation Modal should fetch folders" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground controller Name Validation Modal should store folders after fetching" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground controller"/>
  <testcase name="Playground directive loading should NOT render playground header and playground" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive suggestions should render right slidable panel" time="0.093" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive suggestions should render splitter inside slidable panel" time="0.077" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive recipe header should render left slidable panel" time="0.068" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive recipe header should hide preparation picker modal" time="0.103" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive recipe header should display preparation picker modal" time="0.083" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive dataset parameters should render dataset parameters" time="0.074" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive datagrid should render datagrid with filters" time="0.07" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive ESC management should close playground on escape key" time="0.07" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive ESC management should NOT close playground on non escape key" time="0.071" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive ESC management should NOT close playground when event target is on input element" time="0.068" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Playground directive ESC management should focus on playground container when event target is on input element" time="0.114" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground directive"/>
  <testcase name="Preparation copy/move container should render inventory copy/move in a modal" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move container"/>
  <testcase name="Preparation copy/move controller copy should call preparation copy service" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller copy should refresh folder content" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller copy should show message" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller copy should toggle preparation copy/move modal" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller move should call preparation move service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller move should refresh folder content" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller move should show success message" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation copy/move controller move should toggle preparation copy/move modal" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation copy/move controller"/>
  <testcase name="Preparation creator form component render should render preparation creator content" time="0.048" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render header should render header content" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render header should disable header input while import" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render left Panel should render left panel" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render left Panel should disable import button when entered preparation name already exists" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render left Panel should disable all left panel while import" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should render right panel spinner" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should hide right panel spinner" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should hide right panel spinner and show datasets" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should show a message if there is no dataset to display" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should disable right panel while import" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should update selected dataset background color on first selection" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render right Panel should update selected dataset background color after 1st selection" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render form should render form input Label" time="0.055" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render form should render form input" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render form should disable form input while import" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render form should show error message when entered name already exists" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render buttons should render cancel button" time="0.028" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render buttons should disable cancel while import" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render buttons should render confirm button" time="0.02" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation creator form component render buttons should disable confirm while import or entered name is already used" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator form component"/>
  <testcase name="Preparation Creator Form Controller init should load recent datasets by default" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller loadDatasets should get filtered datasets" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller loadDatasets should manage datasets fetch flag" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller loadDatasets should NOT change datasets and manage flags when get fails" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller loadDatasets should call load datasets" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import with an unavailable dataset name dataset name is NOT available should prompt for a new name" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import with an unavailable dataset name dataset name is available should call import dataset function" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import succeeds should launch preparation creation process once the dataset creation finished" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import succeeds should create a preparation with a generated unique name" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import succeeds should create a preparation with with the entered name by the user" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import progressing should update progress bar" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller import fails should trigger error" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller createPreparation should call create preparation service" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller createPreparation should call UploadWorkflowService openDraft for multisheet dataset" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller checkExistingPrepName should update userHasTypedName flag" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller checkExistingPrepName should not update userHasTypedName flag" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller checkExistingPrepName should set alreadyExistingName flag to true" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller checkExistingPrepName should set alreadyExistingName flag to false" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller selectBaseDataset should update selection flag" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller selectBaseDataset should generate a unique preparation Name given the selected dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller selectBaseDataset should NOT change the entered preparation Name by the user" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller anyMissingEntries should disable form submission when entered name is empty" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller anyMissingEntries should disable form submission when there is no selected dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller anyMissingEntries should disable form submission when entered name already exists" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller getImportTitle should return IMPORT_IN_PROGRESS when import is disabled" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller getImportTitle should return TRY_CHANGING_NAME when name exists" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation Creator Form Controller getImportTitle should return IMPORT_FILE_DESCRIPTION by default" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Creator Form Controller"/>
  <testcase name="Preparation creator container should render preparation creator form in a modal" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation creator container"/>
  <testcase name="Theme filters component render should render filters list" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Theme filters component render should render filters list icons" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Theme filters component render should render filters titles" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Theme filters component render should render filters descriptions" time="0.04" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Theme filters component render should render selected filter" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Theme filters component events should call onSelect callback on click" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Theme filters component events should NOT call onSelect callback when selection is disabled" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Theme filters component"/>
  <testcase name="Preparation Picker Component should render preparations list" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Picker Component"/>
  <testcase name="Preparation Picker Component should show &quot;no compatible preparation&quot; message" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Picker Component"/>
  <testcase name="Preparation Picker Component should trigger callback on preparation click" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Picker Component"/>
  <testcase name="Preparation Picker controller on init should fetch preparations" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Picker controller"/>
  <testcase name="Preparation Picker controller on init should init preparations list with candidates" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Picker controller"/>
  <testcase name="Preparation Picker controller on init should manage fetching flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Picker controller"/>
  <testcase name="Recipe knot inactive knot should render a single inactive knot" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot inactive knot should render: 1st knot among 2, inactive, and will be activated" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot inactive knot should render: middle knot, inactive, and will be activated" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot inactive knot should render: last knot among 2, inactive, and will be activated" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot active knot should render a single active knot" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot active knot should render: 1st knot among 2, active, and will be deactivated" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot active knot should render: middle knot, active, and will be deactivated" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot active knot should render: last knot among 2, active, and will be deactivated" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot Events should call toggle step callback on knot click" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot Events should call toggle step callback on knot hover" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe knot Events should call toggle step callback on knot mouseleave" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe knot"/>
  <testcase name="Recipe component should render recipe entries" time="0.044" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should display a message when there is no steps" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should NOT display empty message when there is at least one step in the recipe" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should render recipe Lookup entry" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should render early preview step" time="0.032" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should render recipe params" time="0.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should render recipe cluster Modal" time="0.036" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should render knots" time="0.035" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should render inactive style" time="0.044" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should highlight steps that will be deleted on remove icon mouse over" time="0.096" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe component should remove highlight class on remove icon mouse out" time="0.059" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe component"/>
  <testcase name="Recipe controller update step should create a closure that update the step parameters" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step should update updateStepInProgress" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step should update step" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step should return true if recipe has steps" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step should return false if recipe has no steps" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step should return false if reorderedSteps in not defined" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step preview should do nothing on update preview if the step is inactive" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step preview should do nothing on update preview if the params have not changed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step preview should call update preview" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller step parameters should return that step has parameters when it has static params" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller step parameters should return that step has parameters when it has dybamic params" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller step parameters should return that step has NO parameters" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should remove step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should NOT call removeStep if the deletion is already in progress" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should hide lookup panel when the deleted step is a lookup step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should stop click propagation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should hide lookup if it is in update mode" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should NOT hide lookup when it is NOT in update mode" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step should NOT hide lookup when it is already already hidden" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller select step should close lookup if it is opened" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller select step should open lookup to update it" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller select step should do nothing on lookup when the selected step is not a lookup" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller select step should show dynamic params modal" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller update step filter should update step filters" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step filter should remove step filter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller remove step filter should show warning message on delete lines step with last filter removal" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Top Line should return false when step is first" time="0.037" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Top Line should return true when step is not first and is active" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Top Line should return true when step is not first and it will be activated" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Bottom Line should return false when step is last" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Bottom Line should return true when step is not last, it is active, and not the last active" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Bottom Line should return true when step is not last, it is inactive, it will NOT be activated and it is not hovered" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Show Bottom Line should return true when step is not last, it will be activated and it is not hovered" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Step will be activated should return true for the 3rd step (inactive), when hovering on the 4th step (inactive)" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Step will be activated should return false for the 4th step (inactive), when the 3rd step (inactive) is hovered" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Step will be deactivated should return true for the 2nd step (active), when the 1st step (active) is hovered" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Step will be deactivated should return false for the 1st step (active) when the 2nd step (active) is hovered" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Step will switch its status should return true when inactive step will be activated" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Step will switch its status should return true when active step will be deactivated" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Hovered status should return true if the step is hovered" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Hovered status should return true if the step is hovered" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Hover Start/End should start hover" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Hover Start/End should return true if the step is hovered" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Drag Start/dragMove/End should have isDrag to false by default" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Drag Start/dragMove/End should enable isDrag" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Drag Start/dragMove/End should update mouse position while dragging" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots Drag Start/dragMove/End should disable isDrag" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller knots click on a knot should toggle step" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller setting the step that will be deleted should set the step that will be deleted" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller setting the step that will be deleted should reset the step that will be deleted" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller steps that should be removed should return true when the current step should be removed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Recipe controller steps that should be removed should return true when the step parent should be also removed" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe controller"/>
  <testcase name="Step Description Component on column scope should render the column name" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description Component"/>
  <testcase name="Step Description Component on cell scope should render cell action" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description Component"/>
  <testcase name="Step Description Component on line scope should render the row number" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description Component"/>
  <testcase name="Step Description Component on dataset scope should show the lookup details" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description Component"/>
  <testcase name="Step Description controller update description should translate description on scope: column" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description should translate description on scope: cell" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description should translate description on scope: line" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description translate description on scope: dataset, should translate description for reordering step" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description translate description on scope: dataset, on action changes" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description translate description on scope: dataset, on lookup action should translate description with 1 column" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description translate description on scope: dataset, on lookup action should translate description with 2 columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Description controller update description translate description on scope: dataset, on lookup action should translate description with more than 2 columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Description controller"/>
  <testcase name="Step Progress component render should render 2 steps" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Progress component"/>
  <testcase name="Step Progress component render should not render steps without label" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Progress component"/>
  <testcase name="Step Progress component render should indicates an in progress upload" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Progress component"/>
  <testcase name="Step Progress component render should indicates an in progress profiling" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Step Progress component"/>
  <testcase name="Dataset progress controller step class getter should return the appropriate class" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset progress controller"/>
  <testcase name="Actions header should set column name in title" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions header"/>
  <testcase name="Actions header should set the number of the selected columns in title" time="0.034" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions header"/>
  <testcase name="Actions list controller init should init const s and flags" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller early preview should trigger early preview with current scope" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller transform should call appendStep function on transform closure execution" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller transform should hide modal after step append" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller transform should append new step on static transformation selection" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller transform should cancel pending preview and disable it" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller transform should re-enable early preview after 500ms" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller transform should update transformationInProgress" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should set current dynamic transformation on dynamic transformation selection" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should init dynamic params on dynamic transformation selection for current dataset" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should init dynamic params on dynamic transformation selection for current preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should update fetch progress flag during dynamic parameters init" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should show NO CLUSTERS WERE FOUND message" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should show NO PARAMETERS WERE FOUND message" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should show dynamic cluster transformation in a modal" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Actions list controller dynamic parameters should show dynamic parameters in a modal" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions list controller"/>
  <testcase name="Action list directive render should render categories" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Action list directive"/>
  <testcase name="Action list directive render should render actions" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Action list directive"/>
  <testcase name="Action list directive filter category" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Action list directive"/>
  <testcase name="Action list directive filter actions" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Action list directive"/>
  <testcase name="Actions suggestions controller shouldRenderAction should render all transformations from non &quot;Suggestion&quot; category" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderAction should render &quot;filtered&quot; transformations on filter data application" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderAction should NOT render &quot;filtered&quot; transformations without filter data application" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderAction should render suggestion transformations on single column selection" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderAction should NOT render suggestion transformations on multi column selection" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderCategory should render category when category is not &quot;suggestion&quot;" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderCategory should render &quot;suggestion&quot; category on filter application" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderCategory should render &quot;suggestion&quot; category when only 1 column is selected" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions controller shouldRenderCategory should NOT render &quot;suggestion&quot; category on multi column selection without filter" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions controller"/>
  <testcase name="Actions suggestions-stats directive should render ghost when actions are being fetched" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Actions suggestions-stats directive"/>
  <testcase name="Column profile options component render should render a control div with &quot;insertion-charts-control&quot; attribute" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options component render should render dropdown trigger" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options component render form should render form" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options component render form should render aggregation selection when there is a selected column" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options component render form should NOT render aggregation selection when there is NO selected column" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options component render description should render current aggregation description" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options component render description should render selected aggregation description" time="0.038" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options component"/>
  <testcase name="Column profile options controller on init should create current aggregation description" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on init should create current aggregation short description" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on init should init selected values to the current aggregation" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on init should create selected aggregation description" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on init should init filtered numeric columns" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #column should update current aggregation description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #column should update current aggregation short description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #aggregation should update current aggregation description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #aggregation should update current aggregation short description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #group should update current aggregation description" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #group should update current aggregation short description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #group should update filtered numeric columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller on changes #numericColumns should update filtered numeric columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller select column should set aggregation to null when there is no selected column" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller select column should init selected aggregation to the current aggregation type" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller select column should init selected aggregation to the &quot;SUM&quot; if there is no current aggregation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller select column should update selected aggregation description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller reset selected should init selected values to the current aggregation" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller reset selected should update selected aggregation description" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller change aggregation should do nothing when selected aggregation is the current one" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller change aggregation should call change callback when selected aggregation has changed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller remove aggregation should call change callback with empty aggregation" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="Column profile options controller selected aggregation description should update description" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column profile options controller"/>
  <testcase name="ColumnProfile controller filter should add a &quot;exact&quot; filter" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller filter should add a number &quot;range&quot; filter with closed intervals" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller filter should add a number &quot;range&quot; filter with mixed intervals" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller filter should add a number &quot;range&quot; filter with only one value" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller filter should add a date &quot;range&quot; filter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller filter should add a date &quot;range&quot; filter from time" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller filter should add a &quot;empty_records&quot; filter from exact_filter on barchart click callback" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller change aggregation should process new aggregation" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="ColumnProfile controller change aggregation should switch to classical chart" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).ColumnProfile controller"/>
  <testcase name="Column Profile directive should render chart ghost when fetching statistics" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column Profile directive"/>
  <testcase name="Column Profile directive should render column profile options" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column Profile directive"/>
  <testcase name="Column Profile directive should render a chart div with &quot;insertion-charts&quot; attribute" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column Profile directive"/>
  <testcase name="Stats-details controller should add a new &quot;pattern&quot; filter" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Stats-details controller"/>
  <testcase name="Stats-details controller should add a new &quot;empty&quot; filter if pattern is empty" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Stats-details controller"/>
  <testcase name="stats details directive should render stats" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).stats details directive"/>
  <testcase name="Transform choice params controller should Not initialize parameter value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform choice params controller"/>
  <testcase name="Transform choice params controller should init choice default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform choice params controller"/>
  <testcase name="Transform choice params controller should init choice to first value if there is no default" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform choice params controller"/>
  <testcase name="Transform choice params controller should not change current value if it is set" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform choice params controller"/>
  <testcase name="Transform choice params controller should return label from value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform choice params controller"/>
  <testcase name="Transformation choice params directive should render a simple select" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation choice params directive"/>
  <testcase name="Transformation choice params directive should render a simple select in readonly mode" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation choice params directive"/>
  <testcase name="Transformation choice params directive should render a simple radio" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation choice params directive"/>
  <testcase name="Transformation choice params directive should render a choice containing parameters" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation choice params directive"/>
  <testcase name="Transform cluster params controller should init allCheckboxState flag to true" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should init clusters active flag to true" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should init clusters parameters default value to true" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should set clusters &quot;active&quot; flags to &quot;allCheckboxState&quot; flag value" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should set &quot;allCheckboxState&quot; flag to true if all clusters are actives" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should set &quot;allCheckboxState&quot; flag to false if a cluster is inactive" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should init replace list for editable select" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should call refreshClusterState if cluster is not initialized" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transform cluster params controller should call initClusterState if cluster is already initialized" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform cluster params controller"/>
  <testcase name="Transformation cluster params directive should render titles" time="0.058" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transformation cluster params directive should render clusters" time="0.034" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transformation cluster params directive should uncheck global activation checkbox" time="0.027" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transformation cluster params directive should uncheck all cluster activation checkbox" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transformation cluster params directive should check all cluster activation checkbox" time="0.029" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transformation cluster params directive should update style on &quot;active --> inactive&quot; cluster row" time="0.028" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transformation cluster params directive should update style on &quot;inactive --> active&quot; cluster row" time="0.032" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cluster params directive"/>
  <testcase name="Transform column param controller with undefined parameter value should set selected value to first column when value is undefined" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform column param controller"/>
  <testcase name="Transform column param controller with undefined parameter value should NOT set selected value when there is no columns and value does NOT exist" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform column param controller"/>
  <testcase name="Transform column param controller with defined parameter value should NOT set selected value when value already exists and columns does NOT exist" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform column param controller"/>
  <testcase name="Transformation column param directive should render an action with a column parameter" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation column param directive"/>
  <testcase name="Transformation column param directive should render an action with a column parameter in readonly mode" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation column param directive"/>
  <testcase name="Transform date param controller should set default if value is not already set" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform date param controller"/>
  <testcase name="Transform date param controller should not set default" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform date param controller"/>
  <testcase name="Transformation date param directive should render an action with parameter" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation date param directive"/>
  <testcase name="Transformation date param directive should render an action with parameter in readonly mode" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation date param directive"/>
  <testcase name="Transform params controller should get the correct parameter type" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transformation params directive should render simple parameters" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation params directive"/>
  <testcase name="Transformation params directive should render regex parameters" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation params directive"/>
  <testcase name="Transformation params directive should render choice" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation params directive"/>
  <testcase name="Transformation params directive should render date" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation params directive"/>
  <testcase name="Transformation params directive should render column choice" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation params directive"/>
  <testcase name="Transform Regex param controller should init value with default value when there is no defined value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform Regex param controller"/>
  <testcase name="Transform Regex param controller should NOT init value when it is defined" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform Regex param controller"/>
  <testcase name="Transformation regex params directive should render an action with a parameter" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation regex params directive"/>
  <testcase name="Transform simple param controller should set numeric default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set integer default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set double default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set float default value" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set boolean true default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set boolean true default value (with boolean default)" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set boolean false default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set 0 value if default value is not numeric with numeric type" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should not set default value if no default value is null" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should not set value if no default value is provided" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should init params default values" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should init params with values values instead of default when available" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should set initial value type" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transform simple param controller should check if it is boolean type" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform simple param controller"/>
  <testcase name="Transformation simple params directive should render an action with a parameter" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation simple params directive"/>
  <testcase name="Transformation simple params directive should render an action with a parameter in read only mode" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation simple params directive"/>
  <testcase name="Transformation simple params directive should render an action with a checkbox and a parameter in read only mode" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation simple params directive"/>
  <testcase name="Transform params controller should extract param" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract param with default value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract simple choice param" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract parameterized choice params" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract parameters and parameterized choice transformation select" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract cluster parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract param and call ctrl onSubmitHoverOn function" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transform params controller should extract param and call ctrl onSubmitHoverOff function" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform params controller"/>
  <testcase name="Transformation form directive should render an action with parameters" time="0.048" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transformation form directive should render an action with simple choice" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transformation form directive should render an action with choice containing parameters" time="0.026" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transformation form directive should render an action with cluster parameters" time="0.036" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transformation form directive should render doc link when there is a docUrl parameter" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transformation form directive should render submit button" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transformation form directive should not render submit button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation form directive"/>
  <testcase name="Transform menu controller should reset parameters/choices on select if items has parameters/choices" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should open modal on select if item has parameters" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should open modal on select if item has choice" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should call transform on simple menu select" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should fetch dynamic parameters" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should display modal and set flags on dynamic params fetch" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should call playground service to append step and hide modal" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should update transformationInProgress" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transform menu controller should hide modal after step append" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transform menu controller"/>
  <testcase name="Transformation menu directive should render a simple action" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu directive"/>
  <testcase name="Transformation menu directive should render title of a simple action" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu directive"/>
  <testcase name="Transformation menu directive should render an action with parameters" time="0.028" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu directive"/>
  <testcase name="Transformation menu directive should render an action with simple choice" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu directive"/>
  <testcase name="Transformation menu directive should render multiple menu items" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu directive"/>
  <testcase name="Transformation menu directive should display selected item parameters" time="0.041" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu directive"/>
  <testcase name="Transformation menu component should display domain" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Transformation menu component should display simplified type when there is no domain" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Transformation menu component should render domain items with percentages" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Transformation menu component should render primitive types" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Transformation menu component should NOT show divider if there is no domains" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Transformation menu component clicks should trigger change domain process" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Transformation menu component clicks should trigger change type process" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation menu component"/>
  <testcase name="Type transform menu controller init should update the selected domain/type on column change" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller init should refresh current domain from column domain" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller init should refresh current domain from column type" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller changeDomain should change domain locally and call backend to add a step" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller changeDomain should revert domain when backend return error" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller changeDomain should change type and clear domain locally and call backend" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller changeDomain should revert type and domain when backend return error" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller shouldBeChecked should check decimal (float) type when current type is double" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller shouldBeChecked should check decimal (float) type when current type is float" time="0.043" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller shouldBeChecked should not check type when it does NOT match current domain" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Type transform menu controller shouldBeChecked should check integer type" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type transform menu controller"/>
  <testcase name="Upgrade version component should not render when no new version available" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Upgrade version component"/>
  <testcase name="Upgrade version component should render when new version available" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Upgrade version component"/>
  <testcase name="Not Blank Validation directive should validate empty input when it can be blank" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Not Blank Validation directive"/>
  <testcase name="Not Blank Validation directive should invalidate input when it cannot be blank and input is empty" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Not Blank Validation directive"/>
  <testcase name="Not Blank Validation directive should validate input when it cannot be blank and input is not empty" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Not Blank Validation directive"/>
  <testcase name="Datetime validation directive should not validate empty input" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datetime validation directive"/>
  <testcase name="Datetime validation directive should not validate integer" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datetime validation directive"/>
  <testcase name="Datetime validation directive should validate a date with default format" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datetime validation directive"/>
  <testcase name="Datetime validation directive should validate a date with provided format" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datetime validation directive"/>
  <testcase name="Type validation directive should validate empty input" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should validate integer type" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should invalidate integer type with double" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should invalidate integer type with letter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should validate numeric type with integer" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should validate numeric type with double" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should invalidate numeric type with letter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="Type validation directive should validate text type" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Type validation directive"/>
  <testcase name="unique folder validation directive should invalidate empty input" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).unique folder validation directive"/>
  <testcase name="unique folder validation directive should validate folder" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).unique folder validation directive"/>
  <testcase name="unique folder validation directive should invalidate existing folder" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).unique folder validation directive"/>
  <testcase name="App header bar container render should create brand link" time="0.039" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container render should create search icon" time="0.035" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container render should create onboarding icon" time="0.031" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container render should create feedback icon" time="0.029" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container render should create user menu" time="0.029" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container render should create products menu" time="0.028" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container onClick should dispatch onboarding icon click" time="0.032" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container onClick should dispatch feedback icon click" time="0.036" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="App header bar container onClick should dispatch feedback icon click" time="0.035" classname="PhantomJS_2_1_1_(Linux_0_0_0).App header bar container"/>
  <testcase name="Breadcrumb container render should create the breadcrumb" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb container"/>
  <testcase name="Breadcrumb container render should create the breadcrumb with ellipsis" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb container"/>
  <testcase name="Breadcrumb container render should create the dropdown within breadcrumb" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb container"/>
  <testcase name="Breadcrumb container onClick should dispatch button click" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb container"/>
  <testcase name="Breadcrumb container onClick should dispatch dropdown item click" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Breadcrumb container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render adapted header only" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render adapted header with content" time="0.06" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render adapted status header" time="0.019" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render adapted status with actions" time="0.025" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render adapted action item" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render simple and badge text" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible header should render simple and badge text in the same group" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Default Collapsible content should render content" time="0.028" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible with descriptive content should render body header" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible rendering Collapsible with descriptive content should render body description" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible events should render a collapsible descriptive panel header buttons" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible events should trigger onSelect function" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="CollapsiblePanel container Collapsible events should trigger onToggle function" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).CollapsiblePanel container"/>
  <testcase name="Inventory list container render should render loader" time="0.057" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container render should render toolbar" time="0.049" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container render should render folders" time="0.049" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container render should render preparations" time="0.05" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container folder actions should dispatch folder creation" time="0.05" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container folder actions should dispatch folder redirection on title click" time="0.051" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container folder actions should dispatch folder edit on action click" time="0.051" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container folder actions should dispatch folder remove on action click" time="0.105" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch preparation creation" time="0.066" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch preparation edit on action click" time="0.054" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch preparation copy/move on action click" time="0.051" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch preparation remove on action click" time="0.051" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch preparation playground on title click" time="0.051" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch preparation sort on action click" time="0.048" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container preparation actions should dispatch sort toggle on name column" time="0.05" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container dataset actions should render favorite action" time="0.036" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container dataset actions should dispatch favorite toggle" time="0.037" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container dataset actions should dispatch sort toggle on name column" time="0.036" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Inventory list container dataset actions should have an invisible and screen reader compatible header" time="0.036" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory list container"/>
  <testcase name="Layout Container should render app layout" time="0.039" classname="PhantomJS_2_1_1_(Linux_0_0_0).Layout Container"/>
  <testcase name="Side Panel container render should create toggle button" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Side Panel container render should create preparations button" time="0.058" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Side Panel container render should create datasets button" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Side Panel container render should set active based on the route state name" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Side Panel container onClick should dispatch toggle button click" time="0.021" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Side Panel container onClick should dispatch preparations button click" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Side Panel container onClick should dispatch datasets button click" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Side Panel container"/>
  <testcase name="Auto-scroll directive should scroll down of 1 scroll step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Auto-scroll directive"/>
  <testcase name="Auto-scroll directive should scroll down of 2 scroll steps" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Auto-scroll directive"/>
  <testcase name="Auto-scroll directive should scroll top after a scroll down" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Auto-scroll directive"/>
  <testcase name="Talend Badge Component not removable should not render a close button" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Talend Badge Component"/>
  <testcase name="Talend Badge Component removable should render a close button" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Talend Badge Component"/>
  <testcase name="Talend Badge Component removable should call onRemove method when badge close button is clicked" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Talend Badge Component"/>
  <testcase name="Button Dropdown directive should call action on main button click" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Dropdown directive"/>
  <testcase name="Button Dropdown directive should render button title" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Dropdown directive"/>
  <testcase name="Button Dropdown directive should render dropdown menu at right by default" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Dropdown directive"/>
  <testcase name="Button Dropdown directive should render dropdown menu at right" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Dropdown directive"/>
  <testcase name="Button Dropdown directive should render dropdown menu at left" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Dropdown directive"/>
  <testcase name="Button Loader directive should render button with text transclusion" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Loader directive"/>
  <testcase name="Button Loader directive should render loading icon" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Loader directive"/>
  <testcase name="Button Loader directive should set button class" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Loader directive"/>
  <testcase name="Button Loader directive should set loader class" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Loader directive"/>
  <testcase name="Button Loader directive should disable button" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Loader directive"/>
  <testcase name="Button Switch directive should render text from current value and display key" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Switch directive"/>
  <testcase name="Button Switch directive should call action with next value on button click" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Switch directive"/>
  <testcase name="Button Switch directive should call action with first value when there is no current value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Switch directive"/>
  <testcase name="Button Switch directive should call action with first value when current value is the last value" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Button Switch directive"/>
  <testcase name="Boxplot chart directive should render the different basic components of the boxplot after a 100ms delay" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Boxplot chart directive"/>
  <testcase name="Horizontal Barchart directive render should render labels after a 100ms delay" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render hover rect after a 100ms delay" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render grid after a 100ms delay with maximum occurrences >= 1e9" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render grid after a 100ms delay with (1e6&lt;= maximum occurrences &lt; 1e9)" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render grid after a 100ms delay with (1e3&lt;= maximum occurrences &lt; 1e6)" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render grid after a 100ms delay with maximum of ticks &lt; 1e3" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render primary data after a 100ms delay" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render primary and secondary data after a 100ms delay" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render secondary data after a 100ms delay" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive render should render tiny bars with a 3px width bar" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive bar class name should set &quot;transparentBar&quot; class as primary bars default class name" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive bar class name should set &quot;blueBar&quot; class as secondary bars default class name" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Horizontal Barchart directive bar class name should set custom secondary bars class name" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Horizontal Barchart directive"/>
  <testcase name="Range slider controller init should set date format" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #isDateType should return true on date limits" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #isDateType should return true on date limits" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #adaptToInputValue should convert number to string" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #adaptToInputValue should convert timestamp to date string" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #adaptFromInputValue should convert string to number" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #adaptFromInputValue should convert string to timestamp" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #getLimitsText should create limits text on number" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #getLimitsText should create limits text on date" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller utils #adaptToInboundValues should set min/max to the limits if the value is out of limits" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #initModel should set number of decimal configuration to the bigger decimal number" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #initModel should set brush last values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #initModel should set brush last values to min/max if they are not defined" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #initModel should set input last values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #initModel should set brush last values to min/max if they are not defined" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #setLastBrushValues should set last brush values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller model #setLastInputValues should set last input values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller brush #updateBrush should update brush values" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller brush #updateBrush should introduce a delta when brush values min/max are the same" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #setInputValue should convert number to string and update input model" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #setInputValue should convert timestamp to date string and update input model" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #resetInputValues should hide error message" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #resetInputValues should set input model to lest registered input values" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #showMsgErr should show invalid number error message" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #showMsgErr should show invalid number decimal error message when comma is used" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #showMsgErr should NOT show invalid number decimal error message when comma is NOT used" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #hideMsgErr should hide error messages" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #inputsAreValid should return true with number input" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #inputsAreValid should return false with non number input" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #inputsAreValid should return true with valid date format input" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #inputsAreValid should return false with non valid date format input" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #validateInputs should hide error messages when inputs are valid" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #validateInputs should show error messages when inputs are invalid" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #handleKey should validate on ENTER" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller input #handleKey should reset inputs on ESC" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onChange should propagate to parent component" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onBrushChange should set last registered brush values" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onBrushChange should propagate to parent component" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onBrushChange should propagate to parent component" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onInputChange should update brush with (within bounds) values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onInputChange should set last registered brush (within bounds) values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onInputChange should set last registered input values" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onInputChange should propagate change to parent component" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onInputChange should do nothing when inputs have not changed" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider controller propagation #onInputChange should reset input values when they are invalid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider controller"/>
  <testcase name="Range slider directive brush should render brush with provided number values" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive brush should render brush with provided date values" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive brush should render brush with number min/max when there is no provided values" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive brush should render brush with date min/max when there is no provided values" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive brush should remove brush when range limits is not defined" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive brush should NOT rerender brush when provided values have NOT changed" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive input should render number min number input with default min value" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive input should render number min number input with provided min value" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive input should render number max number input with default max value" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive input should render number max number input with provided max value" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive input should render date min input" time="0.054" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive input should render date max input" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive error messages should render error message" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="Range slider directive error messages should render number comma error message" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Range slider directive"/>
  <testcase name="verticalBarchart directive render should render svg container with adapted bottom margin: with X-axis" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render svg container with adapted bottom margin: without X-axis" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render y axis after a 100ms delay" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render grid after a 100ms delay" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render hover bars after a 100ms delay" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render primary bars after a 100ms delay" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render x-axis" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should NOT render x-axis" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render primary and secondary bars after a 100ms delay" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render secondary bars after a 100ms delay" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive render should render tiny bars with a 3px height bar" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive active bars should set the initial bars to full opacity" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive active bars should set the bars to inactive opacity = 0.4" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive active bars should update the bars opacity depending on the active limits" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="verticalBarchart directive active bars should set bars opacity to full opacity when it is in the intersection or a limit" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).verticalBarchart directive"/>
  <testcase name="Confirm directive should init modal state and button clicked flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm directive"/>
  <testcase name="Confirm directive should set clicked flag and call service resolve" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm directive"/>
  <testcase name="Confirm directive should set clicked flag and call service reject" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm directive"/>
  <testcase name="Confirm directive should set call service reject on modal dismiss" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm directive"/>
  <testcase name="Confirm directive should do nothing on modal dismiss if one of the button has been clicked" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm directive"/>
  <testcase name="Confirm widget service should create scope and confirm element with options" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm widget service"/>
  <testcase name="Confirm widget service should create scope and confirm element without options" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm widget service"/>
  <testcase name="Confirm widget service should create scope and confirm element with translate arguments" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm widget service"/>
  <testcase name="Confirm widget service with existing confirm should throw error on confirm create but another confirm modal is already created" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm widget service"/>
  <testcase name="Confirm widget service with existing confirm should resolve promise and remove/destroy scope and element" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm widget service"/>
  <testcase name="Confirm widget service with existing confirm should reject promise and remove/destroy scope and element" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Confirm widget service"/>
  <testcase name="Datetimepicker directive should render input element" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datetimepicker directive"/>
  <testcase name="Datetimepicker directive should trigger onBlur callback" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datetimepicker directive"/>
  <testcase name="Dropdown directive closeable dropdown should show dropdown-menu on dropdown-action click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should focus on dropdown menu when it is shown" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should hide dropdown-menu on dropdown-action click when menu is visible" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should hide dropdown-menu on item click" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should register window scroll handler on open" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should unregister window scroll on close" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should hide dropdown-menu on body mousedown" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should unregister body mousedown on element remove" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should stop mousedown propagation on dropdown-menu mousedown" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should hide dropdown menu on ESC" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should not hide dropdown menu on not ESC keydown" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should focus on dropdown action when menu is hidden by ESC" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive closeable dropdown should show menu on first click then close menu on the second click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive not closeable on click dropdown should not hide dropdown-menu on item click if closeOnSelect is false" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive not closeable on click dropdown should hide dropdown-menu on element with &quot;dropdown-close&quot; class" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive with onOpen action should call action on open click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive force placement side should set menu placement to the right by default" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive force placement side should force menu placement to the left" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Dropdown directive force placement side should force menu placement to the right" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dropdown directive"/>
  <testcase name="Editable regex widget controller should init types array" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget controller"/>
  <testcase name="Editable regex widget controller should return the initialized operator key" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget controller"/>
  <testcase name="Editable regex widget controller should return the current operator key" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget controller"/>
  <testcase name="Editable regex widget controller should update regex type" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget controller"/>
  <testcase name="Editable regex widget controller should return the current operator label" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget controller"/>
  <testcase name="Editable regex widget directive init should render regex types" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget directive"/>
  <testcase name="Editable regex widget directive init should render regex types in readonly mode" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget directive"/>
  <testcase name="Editable regex widget directive init should render regex input" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget directive"/>
  <testcase name="Editable regex widget directive trim should not trim input content" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable regex widget directive"/>
  <testcase name="Editable select directive should render input and combobox" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable select directive"/>
  <testcase name="Editable select directive should add the selected value in the input and reset the select" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable select directive"/>
  <testcase name="Editable Text Widget should set edition text to the original text" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget edit mode should set edition text to the original text" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget edit mode should sswitch to edition mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget validation validate everytime should execute validation callback when text has changed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget validation validate everytime should execute validation callback when text has NOT changed" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget validation validate only on change should execute validation callback when text has changed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget validation validate only on change should NOT execute validation callback when text has NOT changed" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget validation should switch to non edition mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget cancel should execute cancel callback" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text Widget cancel should switch to non edition mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text Widget"/>
  <testcase name="Editable Text widget directive render should render all elements (edition and non edition)" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive render should render with visible edition mode elements" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive render should render with visible NON edition mode elements" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive render should render text element with provided text class" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive render should render text element with provided text content" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive render should render input with translated placeholder" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive actions should execute text click callback" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive actions should edit on edit button click" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive actions should execute cancel on input ESC keydown" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Editable Text widget directive actions should NOT execute cancel on input other (not ESC) keydown" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Editable Text widget directive"/>
  <testcase name="Upload File directive should trigger click on input" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Upload File directive"/>
  <testcase name="List Item Handler Component rendering should render two up and down buttons" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="List Item Handler Component rendering should render only up button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="List Item Handler Component rendering should render aria-label for up button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="List Item Handler Component rendering should render only down button" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="List Item Handler Component rendering should render aria-label for down button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="List Item Handler Component actions should call onTopClick method when top button is clicked" time="0.05" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="List Item Handler Component actions should call onBottomClick method when bottom button is clicked" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).List Item Handler Component"/>
  <testcase name="Loading directive should immediatly add &quot;is-loading&quot; class when &quot;talend.loading.start&quot; is emitted" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Loading directive"/>
  <testcase name="Loading directive should add &quot;show-loading&quot; class after 200ms when &quot;talend.loading.start&quot; is emitted" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Loading directive"/>
  <testcase name="Loading directive should remove &quot;show-loading&quot; class when &quot;talend.loading.start&quot; is emitted" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Loading directive"/>
  <testcase name="Modal directive display should show &quot;normal&quot; close button" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive display should not show &quot;normal&quot; close button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive display should show &quot;fullscreen&quot; close button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive display should not show &quot;fullscreen&quot; close button" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive display should add &quot;modal-open&quot; class to body when modal open state is true" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive display should remove &quot;modal-open&quot; class to body when modal open state is false" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should hide modal on &quot;modal-window&quot; div click" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should hide modal on &quot;modal-close&quot; button click" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should hide modal on &quot;modal-header-close&quot; button click" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should not hide modal on &quot;modal-inner&quot; div click" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should focus on &quot;modal-inner&quot; on input ESC keydown" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should hide on ESC keydown" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should not hide on not ESC keydown" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should hit primary button on ENTER keydown" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should not hit primary button on ENTER keydown when disable-enter attribute is true" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should call close callback" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should NOT close modal when beforeClose returns false" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive actions should close modal when beforeClose returns true" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive element should attach popup to body" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive element should remove element on scope destroy" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive multi modal management should focus on &quot;modal-inner&quot; on module open" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive multi modal management should focus on second input on show and select the text coz first has &quot;no-focus&quot; class" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive multi modal management should focus on next last shown modal on focused modal close" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive forbid modal hide should NOT hide the modal on background click" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="Modal directive forbid modal hide should NOT hide the modal on ESCAPE button hit" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal directive"/>
  <testcase name="navigationList directive should render items list" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).navigationList directive"/>
  <testcase name="navigationList directive should trigger item selection callback" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).navigationList directive"/>
  <testcase name="Quality bar controller should calculate simple hash from quality values" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should compute rounded percentages" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should compute width" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should set min width to empty width, and reduce the other width" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should set min width to invalid width, and reduce the other width" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should set min width to valid width, and reduce the other width" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should set 0 to empty width" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should set 0 to invalid width" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should set 0 to valid width" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar controller should reduce width to the bigger only when the others are at minimal width" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar controller"/>
  <testcase name="Quality bar directive with enter animation  should enable transition" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive with enter animation  should reset the width object" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive with enter animation  compute percentage and width after a 300ms timeout" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive without enter animation  should not enable transition" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive without enter animation compute percentage and width with no animation" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive without menu should render only the 3 partitions" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive without menu should call onclick callback for valid selection" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive without menu should call onclick callback for empty selection" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive without menu should call onclick callback for invalid selection" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Quality bar directive with valid menu should render menu and its content" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Quality bar directive"/>
  <testcase name="Resizable input directive should render input" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Resizable input directive"/>
  <testcase name="Resizable input directive should adjust input size on ngModel change" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Resizable input directive"/>
  <testcase name="Add reset button to input directive should render icons" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Add reset button to input directive"/>
  <testcase name="Add reset button to input directive should switch icon when text field is not empty" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Add reset button to input directive"/>
  <testcase name="Add reset button to input directive should empty text field when clicking on clear icon" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Add reset button to input directive"/>
  <testcase name="Slidable directive should hide slidable on creation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should show slidable on creation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should hide slidable on action click" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should show slidable on action click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive true" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive " time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive " time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive true" time="0.045" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should set and configure resize feature on left slidable" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should set and configure resize feature on right slidable" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should set flex constant size on slidable creation if there is a size in localStorage" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should remove transition when resize start" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should set transition again and save width to localstorage, when resize stop" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Slidable directive should set element css to fit wanted size on resize action" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Slidable directive"/>
  <testcase name="Tooltip widget controller should update position" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget controller"/>
  <testcase name="Tooltip widget controller should update visibility state when it is not blocked" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget controller"/>
  <testcase name="Tooltip widget controller should not update visibility state when it is blocked" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget controller"/>
  <testcase name="Tooltip widget controller should unblock and update visibility state" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget controller"/>
  <testcase name="Tooltip widget directive should display tooltip with the right content" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should set the position when requested position is on the left" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should set the position when requested position is on the right" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should set the position when requested position is on the top" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should set the position when requested position is on the bottom" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should get documentElement client size if window inner size is not available" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should get body client size if window inner size and document body size are not available" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should block visibility change when mouse is over tooltip" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should unblock and update visibility change when mouse is not over anymore" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should block visibility change when content is focused" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should unblock and update visibility change when content is unfocused" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Tooltip widget directive should unblock and update visibility change when mouse is not over anymore" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Tooltip widget directive"/>
  <testcase name="Dataprep app config should set $httpProvider useApplyAsync config to true" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataprep app"/>
  <testcase name="About Service should get all build details" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).About Service"/>
  <testcase name="About Service should populate state with builds details" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).About Service"/>
  <testcase name="Column types rest service should fetch primitive types" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types rest service"/>
  <testcase name="Column types rest service should dataset semantic domains" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types rest service"/>
  <testcase name="Column types rest service should preparation semantic domains" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types rest service"/>
  <testcase name="Column types Service refreshTypes should NOT get types from backend when it is already initialized" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Column types Service refreshTypes should get types from backend" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Column types Service refreshTypes should filter and set types in app state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Column types Service refreshSemanticDomains should reset semantic domains in app state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Column types Service refreshSemanticDomains should fetch semantic domains for dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Column types Service refreshSemanticDomains should fetch semantic domains for preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Column types Service refreshSemanticDomains should sort and set semantic domains into app state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Column types Service"/>
  <testcase name="Datagrid service grid data should update data records" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service focus on column should navigate to the column having the highest Id" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service utils functions should return every column id" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service utils functions should return non numeric col ids" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service utils functions should return non boolean col ids" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service utils functions should return non boolean and non numeric col ids" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should create executor that match the preview data" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should apply nothing when executor is falsy" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should apply executor" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should set focus on created columns when applying executor" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should NOT set focus on any column when applying executor if there are no created columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should return reverter on executor application" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="Datagrid service preview operations should replace service data" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datagrid service"/>
  <testcase name="UploadWorkflow Service should update the progress on update" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service should update the file and reset the playground" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service should set error flag and show error toast when update fails" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service open dataset should redirect to playground when dataset is not a draft" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service open dataset should open dataset in new tab on ctrl-click" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service open dataset should open dataset in new tab on MetaKey-click" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service open dataset should open dataset in new tab on mousewheel click" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service open dataset should open sheet preview when dataset is a draft" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service draft should load excel preview and display it" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service draft should display error message with unknown type" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="UploadWorkflow Service draft should refresh dataset list and display error when draft has no type yet" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).UploadWorkflow Service"/>
  <testcase name="Dataset Service init should set the datasets sort when there is a saved one" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service init should NOT set the datasets sort when there is NO saved one" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service init should refresh datasets list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get all should get a promise that resolve the existing datasets if already fetched" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get all should refresh datasets if datasets are not fetched" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get all should get a promise that fetch datasets" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get filtered should fetch most recent datasets" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get filtered should fetch favorite datasets" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get filtered should fetch all datasets" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get by name should find dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get by name should find dataset with case insensitive" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get by name should return undefined when name does not exist" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get by id should find dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service get by id should return undefined when id does not exist" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service delete should delete a dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service delete should remove aggregations from local storage on the removed dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service sheet management should get sheet preview from rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service sheet management should set metadata sheet" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service parameters should get supported encodings and set them in state" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service rename should set new name via app state" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service rename should set back old name via app state on rename failure" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service utils createDatasetInfo should adapt info to dataset object for upload" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service utils createDatasetInfo should adapt info to dataset object for remote dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service utils getUniqueName should get unique dataset name" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service utils getUniqueName should get unique dataset name with a number in it" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service utils checkNameAvailability should resolve on name availability" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service utils checkNameAvailability should reject the existing dataset on name UNavailability" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service compatible preparations should get preparations from rest" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service compatible preparations should adapt compatible preparations with their datasets" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service compatible preparations should exclude current preparation" time="0.043" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service actions enabled should enable remove" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service actions enabled should disable rename" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service changeSort should set sort in app state" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service changeSort should refresh dataset list" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service changeSort should save sort in local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset Service changeSort should restore sort in app state in case of error" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Service"/>
  <testcase name="Dataset List Service getter/refresher nominal should refresh dataset list" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getter/refresher nominal should trigger another refresh when one is already pending with different sort condition" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getter/refresher nominal should call refreshDatasets when datasetsPromise is false" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getter/refresher nominal should return datasetsPromise when datasetsPromise is not false" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getter/refresher nominal should return datasetsPromise" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getter/refresher errors should refresh dataset list when REST request is failed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service create should create dataset" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service create should refresh datasets list" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service create should return original REST promise (not the promise with dataset list refresh)" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service clone should call rest service clone" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service clone should refresh datasets list" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service clone should return original REST promise (not the promise with dataset list refresh)" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service update should update dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service update should refresh datasets list" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service update should return original REST promise (not the promise with dataset list refresh)" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service delete should delete dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service delete should remove dataset from its internal list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service toggle should toggle dataset" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service toggle should refresh datasets list" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getDatasetActions should return actions for a dataset which does not have related preparations" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getDatasetActions should return actions for a dataset which has related preparations" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getClassName should return favorite class" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset List Service getClassName should return empty array when dataset is not favorite" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset List Service"/>
  <testcase name="Dataset Sheet Preview Service should init vars and flags" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service should set modal flag to true" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should reset grid content" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should set current metadata" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should reset selectedSheetName" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should reset currentMetadata" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should set addPreparation" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should call sheet preview service and set selected sheet name" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should call sheet preview service and set current metadata" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load preview should call sheet preview service and update grid" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load sheet should reset grid content" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service load sheet should call sheet preview service and update grid" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Sheet Preview Service should call dataset sheet service" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Sheet Preview Service"/>
  <testcase name="Dataset Rest Service list should call dataset list rest service WITHOUT sort parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list rest service WITH sort parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list rest service WITH sort parameters (only sortType)" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list rest service WITH sort parameters (only sortOrder)" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list by name and return the first dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list by name and return undefined" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list with a filter on the name" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service list should call dataset list with a filter on the name in Japanese" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service creation should call dataset creation rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service creation should call dataset creation rest service with file" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service creation should call dataset creation rest service with import parameters for remote http" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service creation should call dataset creation rest service with parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service update should call dataset update rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service update should call dataset update rest service with size" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service update should call dataset metadata update rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service update should call update column service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service delete should call dataset delete rest service" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service content should call dataset get metadata rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service content should call dataset get content rest service" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service content should call dataset get content rest service with TQL" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service sheet preview should call dataset sheet preview service with default sheet" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service sheet preview should call dataset sheet preview service with provided sheet" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service sheet preview should show loading on call dataset sheet preview service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service favorite should call set favorite" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service clone should call clone rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service encodings should call encodings GET" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Dataset Rest Service compatible preparations should call rest service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Dataset Rest Service"/>
  <testcase name="Early Preview Service early preview should trigger preview after 700ms delay" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service early preview should trigger a preview on columns scope" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service early preview should trigger a preview on lines scope" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service early preview should trigger a preview on dataset scope" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service cancel preview should cancel pending early preview" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service cancel preview should cancel current early preview after a 100ms delay" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service activation should NOT trigger preview when it is disabled" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service activation should NOT cancel current early preview when it is disabled" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Early Preview Service activation should trigger preview when it is enabled" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Early Preview Service"/>
  <testcase name="Not Found interceptor should have the NotFoundInterceptor as an interceptor" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Not Found interceptor"/>
  <testcase name="Not Found interceptor should redirect to 404" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Not Found interceptor"/>
  <testcase name="Export REST Service should get export types" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export REST Service"/>
  <testcase name="Export service should return type with provided id" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export service"/>
  <testcase name="Export service should set params in app state and storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export service"/>
  <testcase name="Export service should get export types and set them in app state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export service"/>
  <testcase name="Export service should set default export type in app state and storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export service"/>
  <testcase name="Export service should set storage saved default export type in app state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Export service"/>
  <testcase name="Feedback Rest Service should send feed back" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback Rest Service"/>
  <testcase name="Filter Adapter Service create filter should create filter" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on CONTAINS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on EXACT filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on INVALID_RECORDS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on QUALITY filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on EMPTY_RECORDS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on VALID_RECORDS filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on INSIDE_RANGE filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter get value should return value on MATCHES filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to CONTAINS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to EXACT filter" time="0.043" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to EXACT multi-valued filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to QUALITY filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to INVALID_RECORDS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to EMPTY_RECORDS filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to VALID_RECORDS filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to INSIDE_RANGE filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service create filter to tree should return tree corresponding to MATCHES filter" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation to tree should return empty object when there is no filter" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation to tree should create single filter tree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation to tree should create multiple filters tree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should return nothing when there is no filter tree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single CONTAINS filter from leaf" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single EXACT filter from leaf" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single number INSIDE_RANGE filter from leaf" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single date INSIDE_RANGE filter from leaf" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single QUALITY filter from OR subtree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single INVALID_RECORDS filter from leaf" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single EMPTY_RECORDS filter from leaf" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single VALID_RECORDS filter from leaf" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create single MATCHES filter from leaf" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="Filter Adapter Service adaptation from tree should create multiple filters from tree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter should create filter" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on CONTAINS filter" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on EXACT filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on INVALID_RECORDS filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on QUALITY filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on EMPTY_RECORDS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on VALID_RECORDS filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on INSIDE_RANGE filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter get value should return value on MATCHES filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tql corresponding to CONTAINS filter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tql corresponding to EXACT filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tree corresponding to EXACT multi-valued filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tree corresponding to INVALID_RECORDS filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tree corresponding to VALID_RECORDS filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tree corresponding to INSIDE_RANGE filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should return tree corresponding to MATCHES filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="TQL Filter Adapter Service create filter to TQL should handle empty value when operator has an operand" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).TQL Filter Adapter Service"/>
  <testcase name="Filter service initFilters should get the filter from localStorage and add it" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;contains&quot; type should create filter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;contains&quot; type should create filter with wildcard" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;contains&quot; type should remove filter when it already exists" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;contains&quot; type should update filter when on already exists with a different value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;exact&quot; type should create filter with caseSensitive" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;exact&quot; type should create filter without caseSensitive" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;exact&quot; type should remove filter when it already exists" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;exact&quot; type should update filter when on already exists with a different value with caseSensitive" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;quality&quot; type should create filter for all columns" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;quality&quot; type should remove filter when it already exists" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;invalid records&quot; type should create filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;invalid records&quot; type should create filter for all columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;invalid records&quot; type should remove filter when it already exists" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;empty records&quot; type should create filter" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;empty records&quot; type should create filter for multi columns" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;empty records&quot; type should remove filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;valid records&quot; type should create filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;valid records&quot; type should remove filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;inside range&quot; type should create number filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;inside range&quot; type should create date filter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;inside range&quot; type should remove filter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;match&quot; type should create filter with empty pattern" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;match&quot; type should create filter with alphanumeric patterns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;match&quot; type should create filter with date patterns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;match&quot; type should create filter with customized date patterns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;match&quot; type should remove filter when it already exists" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter with &quot;match&quot; type should update filter when it already exists with a different pattern" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter should not throw exception on non existing column (that could be removed by a step) in contains filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service add filter should not throw exception on non existing column (that could be removed by a step) in exact filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service remove filter should remove all filters" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service remove filter should call each filter remove callback" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service remove filter should remove filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service remove filter should call filter remove callback" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update &quot;contains&quot; filter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update &quot;exact&quot; filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update &quot;inside_range&quot; filter after a brush" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update &quot;inside_range&quot; filter for date column" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update &quot;inside range&quot; filter when adding an existing range filter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update exact filter while several values are selected" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update range filter while several values are selected" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service update filter should update range filter while from-to values are selected" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter service get splitted range label should isolate range values" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter service"/>
  <testcase name="Filter Manager Service Interval label should construct range label" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service add filter should addFilter" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service add filter should update Filtered Statistics" time="0.018" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service add filter should save Filter in local storage when preparation is opened" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service add filter should save Filter in local storage when dataset is opened" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service add filter and digest should add a filter wrapped in $timeout to trigger a digest" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove all filters should call removeAllFilters method of Filter service" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove all filters should update filtered statistics" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove all filters should remove filter from local storage when preparation is opened" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove all filters should remove filter from local storage when dataset is opened" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove a filter should call remove filter method of Filter service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove a filter should update filtered statistics" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service remove a filter should remove filter from local storage when preparation is opened" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service toggle all filters should call toggleFilters filter method of Filter service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service toggle all filters should update filtered statistics" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service update filter should call updateFilter method of filter service" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service update filter should update filtered statistics" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Filter Manager Service update filter should update filter in local storage" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter Manager Service"/>
  <testcase name="Folder services simple REST calls should call rest children" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services simple REST calls should call rest children with home folder by default" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services simple REST calls should call rest create" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services simple REST calls should call rest create with default folder" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services simple REST calls should call rest rename" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services simple REST calls should call rest rename" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services init should start onboarding" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services init should set the preparation sort when there is a saved one" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services init should NOT set the preparation sort when there is NO saved one" time="0.043" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services init should refresh folder content" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services init should refresh folder content with home folder by default" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refresh should get content with sort and order" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refresh should get folder metadata" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refresh should set the folder adapted content in app state" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refresh should get folder metadata" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refresh should get folder metadata with homeFolderId" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refreshBreadcrumbChildren should fetch folder children" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services refreshBreadcrumbChildren should set folder children as breadcrumb item children in app state" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services adaptPreparations should wrap preparation" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services adaptFolders should wrap folder" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services getPreparationActions should return fixed preparation actions" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services getFolderActions should return fixed folder actions" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services changeSort should set sort in app state" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services changeSort should refresh current folder" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services changeSort should save sort in local storage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services changeSort should restore sort in app state in case of error" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services remove should remove folder" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder services remove should refresh current folder" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder services"/>
  <testcase name="Folder Rest Service children should call get folder's children" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Rest Service"/>
  <testcase name="Folder Rest Service create should call create folder" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Rest Service"/>
  <testcase name="Folder Rest Service content should get folder content" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Rest Service"/>
  <testcase name="Folder Rest Service content should get folder content with sort and order" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Rest Service"/>
  <testcase name="Folder Rest Service remove should call remove" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Rest Service"/>
  <testcase name="Folder Rest Service rename should call rename" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Folder Rest Service"/>
  <testcase name="History service init should init &quot;in progress&quot; flags to false" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service add/remove should add action into history" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service add/remove should clear history" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should undo last action" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should undo all actions" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should push back undo action on error" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should manage undoing flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should do nothing when undo list is empty" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should do nothing when already performing undo" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service undo should do nothing when already performing redo" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should redo last undone action" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should redo all actions" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should push back redo action on error" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should manage redoing flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should do nothing when redo list is empty" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should do nothing when already performing undo" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="History service redo should do nothing when already performing redo" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).History service"/>
  <testcase name="Import REST Service should get all import parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should get dataset form properties" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should refresh datastore form properties" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should test connection" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should refresh dataset form properties" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should create dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should get filled datastore and dataset forms by dataset id" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import REST Service should edit dataset properties" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import REST Service"/>
  <testcase name="Import service importParameters should call REST service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service importParameters should manage loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service refreshForm should call REST service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service refreshForm should manage loader" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service refreshForms should call REST service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service refreshForms should manage loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service testConnection should call REST service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service testConnection should manage loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service createDataset should call REST service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service createDataset should manage loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service getFormsByDatasetId should call REST service" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service getFormsByDatasetId should manage loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service editDataset should call REST service" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service editDataset should manage loader" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service import should show dataset name popup when name already exists" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service import should create dataset if unique" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service import should close modal if import is successful" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service import should call a custom action after import" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service onImportNameValidation with unique name should create dataset if name is unique" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service onImportNameValidation with unique name should update progress on create" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service onImportNameValidation with unique name should set error flag and show error toast" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service onImportNameValidation with existing name should do nothing on confirm modal dismiss" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service onImportNameValidation with existing name should create dataset with modified name" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Import service onImportNameValidation with existing name should update existing dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import service"/>
  <testcase name="Lookup service init lookup should load the first action as new lookup" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service init lookup datasets should fetch datasets list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service init lookup datasets should NOT fetch datasets list if it already exists" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service init lookup actions should fetch lookup actions when they are not initialized yet" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service init lookup actions should NOT fetch lookup actions when they are already initialized" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service create a lookup step should initialize the lookup creation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service update a lookup step should not get dataset transformations if there is not dataset yet" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service update a lookup step should set the join column in the state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service update a lookup step should update the base lookup column" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service fetching lookup dataset content and updating the state should fetch dataset content the lookup creation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service add datasets to lookup should disable datasets which are used in recipe steps" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service add datasets to lookup should initialize lookup datasets" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Lookup service add datasets to lookup should update lookup datasets" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup service"/>
  <testcase name="Onboarding service should return true when tour has not been completed yet" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should return false when tour has already been completed" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should configure intro.js options" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should create/adapt preparation tour step" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should create/adapt playground step" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should create/adapt column selection" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should create/adapt recipe tour step" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should save &quot;preparation&quot; state in localstorage on tour complete" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should save &quot;preparation&quot; state in localstorage on tour exit" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should not start onboarding when 403" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should redirect to &quot;preparations&quot; before starting onboarding" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Onboarding service should redirect BACK to &quot;datasets&quot; after redirecting to &quot;preparations&quot; " time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding service"/>
  <testcase name="Parameters Service reset should reset current values to initial saved values in simple param" time="0.043" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Parameters Service reset should reset current values to initial saved values in choice param" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Parameters Service reset should reset current values to initial saved values in cluster param" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Parameters Service reset should do nothing when param is falsy" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Parameters Service init params values should init params values on simple params" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Parameters Service init params values should init params values on select params" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Parameters Service init params values should init params values on cluster params" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Parameters Service"/>
  <testcase name="Playground Service update preparation should set new name to the preparation name" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service update preparation history should add undo/redo actions after append transformation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service update preparation history should change preparation name on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service update preparation history should change preparation name on REDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load dataset should init playground" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load dataset should manage loading spinner" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load dataset should not stop spinner if it has been started more than one time" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load dataset should reset preparation name" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load dataset should start playground unboarding tour" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load dataset should NOT start playground unboarding tour" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load preparation should load existing preparation" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load preparation should manage loading spinner on preparation load" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load preparation should load existing preparation with simulated dataset metadata when its metadata is not set yet" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load preparation should start preparation tour" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service load preparation should load preparation content at a specific step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service fetch dataset statistics should get metadata and set its statistics in state" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service fetch dataset statistics should trigger statistics update" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service fetch dataset statistics should reject promise when the statistics are not computed yet" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service fetch preparation statistics should get metadata and set its statistics in state" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service fetch preparation statistics should trigger statistics update" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service fetch preparation statistics should reject promise when the statistics are not computed yet" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append should create a preparation when there is no preparation yet" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append should append step to the new created preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append should append step to an existing preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append should show/hide loading" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append should refresh recipe" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append should refresh datagrid with head content" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append history should add undo/redo actions after append transformation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append history should set preparation head to previous head on UNDO" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append history should refresh recipe on UNDO" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps append history should refresh datagrid content on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update should not update preparation step when parameters are not changed" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update should update preparation step when parameters are different" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update should show/hide loading" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update should refresh recipe" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update should load previous last active step" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update history should add undo/redo actions after update transformation" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update history should set preparation head to previous head on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update history should refresh recipe on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps update history should refresh datagrid content at the last active step on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should not reorder steps if step does not move" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should not move step up if it is already the first one" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should move step up" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should move step up by selecting initial step as next parent if step becomes the first" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should move step down" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should not move step down if it is already the last one" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should show/hide loading" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should refresh recipe" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder should update datagrid" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder history should add undo/redo actions after move step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder history should set preparation head to previous head on UNDO" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder history should refresh recipe on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps reorder history should refresh datagrid content on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove should remove preparation step" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove should show/hide loading" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove should refresh recipe" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove should update datagrid" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove history should add undo/redo actions after remove transformation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove history should set preparation head to previous head on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove history should refresh recipe on UNDO" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps remove history should refresh datagrid content on UNDO" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps edit Cell should append step on cell scope" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps edit Cell should append step on column scope" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps edit Cell should append step with filters" time="0.045" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps params completion and append Step should call appendStep with column" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps params completion and append Step should call appendStep with row" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps params completion and append Step should call appendStep without param" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps params completion and append Step should call appendStep with filter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps params completion and append Step should create an append closure" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps params completion and append Step should create an append closure with multi columns" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps toggle step should load current step content if the step is first inactive" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation steps toggle step should load previous step content if the step is first active" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset parameters should perform parameters update on current dataset" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset parameters should reinit playground with dataset after parameters update" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset parameters should reinit playground with preparation at active step after parameters update" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service on step append route change should change route to preparation route on first step" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service on step append recipe display should display onboarding on third step if the tour has not been completed yet" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service on step append recipe display should NOT display onboarding on third step if the tour has already been completed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service on step append recipe display should show recipe only on the first step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service update preparation details should get details for first step" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service copy steps should copy steps" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service copy steps should update recipe" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service copy steps should update datagrid" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service copy steps should manage loader" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should start loading" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should set previous route to preparations home" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should call get dataset details" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should get dataset metadata" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should load playground" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should not reload preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should fetch statistics when they are not computed yet" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should retry statistics fetch when the previous fetch has been rejected (stats not computed yet) with a delay of 1500ms" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service preparation should NOT fetch statistics when they are already computed" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset should startloading" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset should init previous route to dataset home" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset should init playground" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset should fetch statistics when they are not computed yet" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset should retry statistics fetch when the previous fetch has been rejected (stats not computed yet) with a delay of 1500ms" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Playground Service dataset should NOT fetch statistics when they are already computed" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground Service"/>
  <testcase name="Preparation Service lifecycle create should set previous route" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service lifecycle create should create a new preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service lifecycle create should save aggregations for preparation from dataset aggregations" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service lifecycle update should update current preparation name" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service lifecycle delete should delete a preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service lifecycle delete should remove aggregations from storage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service lifecycle open should open a preparation in the current tab" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service steps copyImplicitParameters should copy implicit parameters when they are in original params" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service steps copyImplicitParameters should not copy filter implicit parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service steps copyImplicitParameters should NOT copy implicit parameters when they are NOT in original params" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service steps paramsHasChanged should return true if the parameters are different" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service steps paramsHasChanged should return false if the parameters are the same" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation Service steps update should update a preparation step with provided parameters" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation Service"/>
  <testcase name="Preparation REST Service preparation lifecycle should create a new preparation" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation lifecycle should update preparation name" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation lifecycle should delete the preparation" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation lifecycle should copy the preparation" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation lifecycle should move the preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation getters should get the current preparation details" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation getters should get the requested version of preparation content" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation getters should get the requested version of preparation metadata" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should append a transformation step in the current preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should append a transformation step in the current preparation at a provided insertion point" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should append a list of transformation step in the current preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should update a transformation step in the current preparation" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should move a transformation step in the preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should remove a transformation step in the preparation" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should move preparation head" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preparation step lifecycle should copy preparation reference steps" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preview should call preview POST request" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preview should cancel POST preview by resolving the given promise" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preview should call update preview POST request" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preview should cancel POST update preview by resolving the given promise" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preview should call add preview POST request" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preparation REST Service preview should cancel POST add preview by resolving the given promise" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation REST Service"/>
  <testcase name="Preview Service Disable preview when the datagrid is empty should not call getPreviewDiff" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service Disable preview when the datagrid is empty should not call getPreviewAdd" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service Disable preview when the datagrid is empty should not call getPreviewUpdate" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service Disable preview when the datagrid is empty should not call getPreviewUpdateRecords" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service diff preview should call and display preview" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service diff preview should cancel preview on error" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service diff preview should focus on provided column" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service diff preview should cancel current pending preview" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should call and display preview" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should cancel preview on error" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should focus on update step column" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should cancel current pending preview" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service add preview should call and display preview" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service add preview should cancel preview on error" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service add preview should focus on add step column" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service add preview should cancel current pending preview" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service reset/cancel/stop preview should stop pending preview" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service reset/cancel/stop preview should restore original data on reset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service reset/cancel/stop preview should NOT restore original data on reset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service reset/cancel/stop preview should stop pending preview on cancel call" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service reset/cancel/stop preview should set focused column and restore original data on cancel call" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should call update preview" time="0.044" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should do nothing on update preview if the step is inactive" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Preview Service update preview should do nothing on update preview if the params have not changed" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preview Service"/>
  <testcase name="Recipe Knot service should trigger append preview on inactive step hover after a delay of 300ms" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe Knot service"/>
  <testcase name="Recipe Knot service should cancel pending preview action on step hover" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe Knot service"/>
  <testcase name="Recipe Knot service should trigger diff preview after a 300ms" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe Knot service"/>
  <testcase name="Recipe Knot service should cancel current preview on mouse hover end after a delay of 100ms" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe Knot service"/>
  <testcase name="Recipe Knot service should cancel pending preview action on mouse hover end" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe Knot service"/>
  <testcase name="Recipe service refresh should set recipe steps with row infos when a preparation is loaded" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should set recipe steps with no params when a preparation is loaded" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should get recipe from preparation and init recipe simple params" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should get recipe from preparation and init recipe choices" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should get recipe from preparation and init dynamic params" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should init step filters from backend tree" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should reuse dynamic params from previous recipe if ids are the same, on refresh" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service refresh should save steps actions parameters" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service early preview should create a new recipe with preview step appended" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service early preview should cancel preview and set back previous state" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service step parameters should return that step has dynamic parameters when it has cluster" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service step parameters should return that step has NO dynamic parameters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service step parameters should return that step has static parameters when it has simple params" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service step parameters should return that step has static parameters when it has choice params" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service step parameters should return that step has NO static parameters" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service filters should display all filter name on hover" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service knots First/Last in the recipe should return true if the step is the 1st in the recipe" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service knots First/Last in the recipe should return false if the step is the 1st in the recipe" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service knots First/Last in the recipe should return true if the step is the last in the recipe" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service knots First/Last in the recipe should return false if the step is the last in the recipe" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service knots Last Active should return false when the step is not the last active in the recipe" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Recipe service knots Last Active should return true when the step is the last active in the recipe" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe service"/>
  <testcase name="Rest message interceptor factory should have the RestErrorMessageHandler as an interceptor" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should show alert when service is unavailable" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should show toast on status 500" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should not show toast when fileSilently flag is set" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should not show message on user cancel" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should show expected error message if exist" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should not show error message if not exist" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should not show error message if unauthorized" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should not show error message if forbidden" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Rest message interceptor factory should not show error message if not found" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Rest message interceptor factory"/>
  <testcase name="Search Documentation Rest Service should call external documentation rest service " time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search Documentation Rest Service"/>
  <testcase name="Search Documentation Service success should call documentation search rest service and process data" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search Documentation Service"/>
  <testcase name="Search Documentation Service failure should return empty array" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search Documentation Service"/>
  <testcase name="Search Inventory Rest Service should call inventory search rest service " time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search Inventory Rest Service"/>
  <testcase name="Search Inventory Service should call inventory search rest service and process data" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search Inventory Service"/>
  <testcase name="Search service searchDocumentation should call documentation service" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search service"/>
  <testcase name="Search service searchInventory should call inventory service" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search service"/>
  <testcase name="Search service searchAll should call all services" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search service"/>
  <testcase name="Search service searchAll should aggregate results" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search service"/>
  <testcase name="dataset state service should add an uploading dataset" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).dataset state service"/>
  <testcase name="dataset state service should remove the uploading dataset" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).dataset state service"/>
  <testcase name="Easter Eggs state service should enable an easter egg" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Easter Eggs"/>
  <testcase name="Easter Eggs state service should disable an easter egg" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Easter Eggs"/>
  <testcase name="Feedback state should init visibility to false" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback state"/>
  <testcase name="Feedback state should show feedback" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback state"/>
  <testcase name="Feedback state should hide feedback" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Feedback state"/>
  <testcase name="Filter state service toogle should enable filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service toogle should disable filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service reset should reset grid filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service grid filters should add a new filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service grid filters should add filter to existing filters" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service grid filters should update filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service grid filters should remove not the last filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service grid filters should remove the last filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Filter state service grid filters should remove all filters" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Filter state service"/>
  <testcase name="Grid state service filter should set filters to DataView" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service filter should grid line stats" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data should set data to DataView" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data should grid line stats" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data should update numeric columns" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should update line selection row with the new row corresponding to the selected index (not id)" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should NOT change selected line row when data is preview data" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should NOT change select line row when there is no selected line yet" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should update columns metadata with the new metadata" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should update column metadata with the new metadata corresponding to the selected id" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should update column metadata with the 1st column when actual selected column is not in the new columns" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should update column metadata with the first column metadata when there is no selected column yet" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should NOT update column metadata when there is no selected column but a selected line" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service data selection should not change selected column when data is preview data" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service grid event state should set focused columns" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service grid event state should set grid selection" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service grid event state should set lineIndex to null when we have no line selection" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service reset should reset event result state" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service selected colums toggleColumnSelection should select a column" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service selected colums toggleColumnSelection should unselect a selected column" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service selected colums changeRangeSelection should select a columns" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service selected colums changeRangeSelection should select a columns range if min &lt; index" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service selected colums changeRangeSelection should select a columns range if min >= index" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service domains &amp; types should set semantic domains" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service domains &amp; types should set primitive types" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service filtered values should update filtered records on filter change" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service filtered values should update filtered records occurrences on filter change" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service filtered values should update filtered records on data change" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service filtered values should update filtered records occurrences on data change" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="Grid state service filtered values should update filtered records occurrences on grid selection" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Grid state service"/>
  <testcase name="home state toggleSidepanel should toggle sidepanel" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state toggleCopyMovePreparation should toggle copy/move preparation" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state toggleCopyMovePreparation should set preparation and its initial folder" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state toggleCopyMovePreparation should set copy move tree" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state toggleCopyMovePreparation should set copy move tree loading" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state togglePreparationCreator should toggle preparation creator" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state toggleFolderCreator should toggle folder creator" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state About should toggle about modal" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="home state About should populate builds" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).home state"/>
  <testcase name="Import state service should hide import modal " time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import"/>
  <testcase name="Import state service should show import modal " time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import"/>
  <testcase name="Import state service should set current import item" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Import"/>
  <testcase name="Inventory state service datasets should set display mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service datasets should set datasets" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service datasets should remove a dataset from datasets list" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service datasets should update dataset name" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service datasets should set dataset to update" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service preparation should set display mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service preparation should enable edit mode" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service preparation should disable edit mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service folder should set folder metadata" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service folder should set content" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service folder should set user's home folder id" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service folder should set current home folder to user's home folder id" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service folder should enable edit mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service folder should disable edit mode" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service sort/order should set datasets sort" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service sort/order should set preparations sort" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service loading should set FetchingDatasets" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Inventory state service loading should set FetchingPreparations" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory state service"/>
  <testcase name="Lookup state service visibility should set visibility flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service reset should reset state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service init actions should set actions" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service parameters update should update the columns to add corresponding to the checkboxes model" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service parameters update should set selected column" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service parameters update should update the columns to add on new column selection" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service parameters update should NOT update the columns to add when there is no selected column" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service sort should sort lookup step when updating the sort type" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service sort should sort lookup step when updating the order type" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service sort should sort lookup step when updating the sort type in case of String" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Lookup state service sort should sort lookup step when updating the order type in case of String" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Lookup state service"/>
  <testcase name="Playground state service init should init visible to false" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service init should init isSending to false" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service init should init separators list" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service visibility should hide" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service visibility should show" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service sending flag should set sending flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service encoding should set encodings list" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service update should update dataset separator" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service update should update dataset encoding" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service reset should reset parameters" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service readonly mode should set readonly mode in state" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service saving preparation should set NameValidation visibility" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service saving preparation should set preparation picker visibility" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service saving preparation should set saving preparation folders" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service saving preparation should set saving preparation folders loading" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service dataset should set dataset metadata in state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service sample type should init sample type" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service sample type should set sample type flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set preparation in state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set preparation name in state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set name edition flag in state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set saving in progress flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set loading flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set Lookup Visibility flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service preparation should set the step in edition mode" time="0.048" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service data should set data in state" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service data should set data in grid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service data should set filters again on data change in grid to refresh statefull filters (ex: invalid filters)" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service data should set data with disabled filter" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service column statistics should set fetch in progress flag in state" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service column statistics should update columns statistics" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service column statistics should update columns quality infos" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service column statistics should update dataset records number" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service parameters should hide parameters when they are visible" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service parameters should show parameters when they are not visible" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service parameters should update parameters when they are not visible" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters add should add filter in filter list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters add should apply filters in grid" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters update should update filter in filter list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters update should apply filters in grid" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters remove should add remove from filter list" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters remove should apply filters in grid on single remove" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters remove should remove all filters from filter list" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters remove should apply filters in grid on remove all" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters toogle should enable filters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service filters toogle should disable filters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service reset should reset playground" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="Playground state service reset should reset sub-states" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Playground state service"/>
  <testcase name="progress service should start the progress sequence" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).progress service"/>
  <testcase name="progress service should go to the next progress step and update states" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).progress service"/>
  <testcase name="progress service should reset steps" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).progress service"/>
  <testcase name="progress service should return value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).progress service"/>
  <testcase name="progress service should set the title" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).progress service"/>
  <testcase name="progress service should add the given schema" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).progress service"/>
  <testcase name="Recipe state service visibility should set visibility to true" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe state service"/>
  <testcase name="Recipe state service visibility should set visibility to false" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe state service"/>
  <testcase name="Recipe state service current hovered step should set the currently hovered step" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe state service"/>
  <testcase name="Recipe state service reset should reset recipe state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe state service"/>
  <testcase name="Recipe state service setAllowDistributedRun should set recipe could be distributed" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Recipe state service"/>
  <testcase name="Route state service previous should init previous route" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service previous should set previous route" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service previous should NOT change previous route if it is falsy" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service previous should reset previous route" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service next should init next route" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service next should set next route" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service next should NOT change next route when it is falsy" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service next should reset next route" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Route state service reset should reset all routes" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Route state service"/>
  <testcase name="Search state service should toggle" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Search state service should set searching" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Search state service should set input search" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Search state service should set search results" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Search state service should set search categories" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Search state service should set focused section index" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Search state service should set focused item index" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search"/>
  <testcase name="Statistics state service should set histogram" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics state service"/>
  <testcase name="Statistics state service should set filtered histogram" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics state service"/>
  <testcase name="Statistics state service should set active limits" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics state service"/>
  <testcase name="Statistics state service should set patterns" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics state service"/>
  <testcase name="Statistics state service should set filtered patterns" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics state service"/>
  <testcase name="Statistics state service should reset all statistics" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics state service"/>
  <testcase name="Suggestions state service loading flag should set loading flag" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service selected tab should set loading flag" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should init line transformations" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should set line transformations" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should init column transformations" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should set column transformations" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should update filtered Transformations" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should set transformations for empty cells" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should set transformations for invalid cells" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service transformations should NOT set transformations for invalid/empty cells when they are already set" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should reset loading flag" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should reset selected tab" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should reset line transformations" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should reset dataset transformations" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should reset column transformations" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should NOT reset transformations for invalid cells" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Suggestions state service reset should NOT reset transformations for empty cells" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Suggestions state service"/>
  <testcase name="Statistics REST service should get aggregation column data" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics REST service"/>
  <testcase name="Statistics REST service should get aggregation column data from cache" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics REST service"/>
  <testcase name="Statistics REST service should reset cache" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics REST service"/>
  <testcase name="Statistics service filters should create a function that reinit range limits when the selected column is the same" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service filters should create a function that do nothing when the selected column is NOT the same" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service init Statistics : The statistics values should init number statistics whithout quantile" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service init Statistics : The statistics values should init number statistics with quantile" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service init Statistics : The statistics values should init text statistics" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service init Statistics : The statistics values should init common statistics when the column type is not &quot;number&quot; or &quot;text&quot;" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : The statistics values should update empty pattern statistics" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : The statistics values should update date pattern statistics" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : The statistics values should update non date pattern statistics" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : The statistics values should format pattern according to grid constraints" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : The statistics values should update pattern statistics without filter" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : Statistics routing (basic / aggregations) should update histogram data with classical occurrence when there is no saved aggregation on the current preparation/dataset/column with filter" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : Statistics routing (basic / aggregations) should update histogram data with classical occurrence when saved aggregation column does NOT exist anymore" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : Statistics routing (basic / aggregations) should update histogram data from saved aggregation configuration" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Statistics : Statistics routing (basic / aggregations) should reset non histogram charts" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process Aggregations should update histogram data from REST call result and aggregation infos on dataset" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process Aggregations should update histogram data from aggregation infos on preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process Aggregations should save column aggregation in storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process Aggregations should reset histogram when REST WS call fails" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should set range and brush limits to the min and max of the column" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should update the brush limits to the existing range filter values" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should update the brush limits to the minimum" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should update the brush limits to the [minimum, maximum] " time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should update the brush limits to the maximum" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should update the brush limits to [minBrush, maximum]" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The range slider should update the brush limits to [minimum, maxBrush]" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The boxplot data should reset boxplotData when quantile values are NaN" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts The boxplot data should set boxplotData statistics with quantile" time="0.014" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process horizontal chart should reset non histogram data when column type is &quot;string&quot;" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process horizontal chart should set the frequency data with formatted value when column type is &quot;string&quot; with filter" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process horizontal chart should set the frequency data with formatted value when column type is &quot;string&quot; without filter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process horizontal chart should reset non histogram data when column type is &quot;boolean&quot;" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process horizontal chart should set the frequency data when column type is &quot;boolean&quot;" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart number should set the range data frequency when column type is &quot;number&quot; with filters" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart number should set the range data frequency without filters" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should NOT set the range histogram when there is no histogram" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should set the range data frequency when column type is &quot;date&quot; with filters" time="15.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should set the range data frequency with no filters" time="15.097" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to century" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to decade" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to year" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to half year" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to quarter" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to month" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to week" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts process vertical chart date should adapt date range label to day" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts should reset charts data when column type is not supported" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Process classic charts should remove saved aggregation on current column/preparation/dataset from storage" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should do nothing when there is no statistics yet" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should update filtered Numeric column" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should update filtered Date column" time="15.022" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should update filtered Text column" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should update filtered Patterns Frequency" time="15.035" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should NOT update filtered data when there is an aggregation" time="0.016" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service Update Filtered Statistics should update aggregation chart when at least 1 filter exists" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service utils should reset all charts, statistics, cache" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service utils should reset date filtered occurrence worker" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics service utils should reset date pattern filtered occurrence worker" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics service"/>
  <testcase name="Statistics Tooltip service without filter should create tooltip for simple record" time="0.017" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service without filter should create tooltip for range record with min > min data values and  max &lt; max data values" time="0.015" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service without filter should create tooltip for range record with min &lt; min data values and  max &lt; max data values" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service without filter should create tooltip for range record with min &lt; min data values and  max >= max data values" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service without filter should create tooltip for range record with min > min data values and  max >= max data values" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service without filter should create tooltip for unique-value range record" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service with filters should create tooltip for simple record" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service with filters should create tooltip for aggregation chart" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service with filters should create tooltip for range record" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service with filters should create tooltip for unique-value range record" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Statistics Tooltip service with filters should create tooltip without secondary data (not computed yet)" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Statistics Tooltip service"/>
  <testcase name="Transformation cache service should put and get transformations in cache" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cache service"/>
  <testcase name="Transformation cache service should put and get suggestions in cache" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cache service"/>
  <testcase name="Transformation cache service should invalidate caches" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation cache service"/>
  <testcase name="Transformation Rest Service transformations should get transformations on column scope" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service transformations should get transformations on line scope" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service transformations should get transformations on dataset scope" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service suggestions should get suggestions on provided scope and entity" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service dynamic parameters should call GET transformation dynamic params rest service with preparationId" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service dynamic parameters should call GET transformation dynamic params rest service with preparationId and stepId" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service dynamic parameters should call GET transformation dynamic params rest service with datasetId" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Rest Service datasets transformations should fetch the dataset transformations" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Rest Service"/>
  <testcase name="Transformation Service initDynamicParameters should reset params before dynamic params fetch" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service initDynamicParameters should fetch dynamic parameters and inject them into transformation" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service getTransformations should get transformations from cache" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service getTransformations should fetch the transformations for the given scope and entity" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service getTransformations should put the transformations in cache" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service getSuggestions should get suggestions from cache" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service getSuggestions should fetch the suggestions for the given scope and entity" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service getSuggestions should put the suggestions in cache" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service fetchSuggestionsAndTransformations should fetch suggestions and transformations for column scope" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service fetchSuggestionsAndTransformations should only fetch transformations for NON column scope" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service initTransformations should fetch suggestions and transformations and set them in app state" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service initTransformations should manage loading flag" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service filter should filter transformations/categories and update them in app state" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Service filter should set back all categories in app state when search term is falsy" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Service"/>
  <testcase name="Transformation Utils Service adaptTransformations should clean parameters" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service adaptTransformations should extract parameterized choice params without prefix" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service adaptTransformations should extract parameterized choice params with prefix" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service adaptTransformations should insert input types" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service adaptTransformations should insert html labels" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service sortAndGroupByCategory should filter &quot;hidden_in_action_list&quot; scope" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service sortAndGroupByCategory should group transformations by category, sorted by name" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service sortAndGroupByCategory should sort transformations within a category" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service adaptCategories should concat filtered, then suggestions, then other categories" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service transfosMatchSearch should return true when transformation labelHtml matches" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service transfosMatchSearch should return true when transformation description matches" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service transfosMatchSearch should return false" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service extractTransfosThatMatch should filter transformations that match the search term" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service extractTransfosThatMatch should return all transformations within a category that matches the search term" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service highlightDisplayedLabels should highlight the search term in category names" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Transformation Utils Service highlightDisplayedLabels should highlight the search term in transformations name" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Transformation Utils Service"/>
  <testcase name="Disable right click directive should prevent default behavior on right click" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Disable right click directive"/>
  <testcase name="Copyrights service should set value by default" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Copyrights service"/>
  <testcase name="Documentation search service should register" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Documentation search service"/>
  <testcase name="Documentation search service should identify placeholders" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Documentation search service"/>
  <testcase name="Documentation search service should replace placeholders" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Documentation search service"/>
  <testcase name="REST urls service should init api urls with empty server url (same url by default)" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).REST urls service"/>
  <testcase name="REST urls service should change api url with provided server url" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).REST urls service"/>
  <testcase name="Version service should set unknown version as value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Version service"/>
  <testcase name="Converter service should return number when input type is numeric, integer, double or float" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return text when input type is string" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return checkbox when input type is boolean" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return checkbox when input type is password" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return text by default" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return integer label when column type is numeric, integer" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return decimal label when column type is double or float" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return text label when column type is string or char" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return boolean label when column type is boolean" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return date label when column type is date" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return unknown label when column type is unknown" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return integer when column type is numeric, integer" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return decimal when column type is double or float" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return text when column type is string or char" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return boolean when column type is boolean" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return date when column type is date" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should return unknown when column type is unknown" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Converter service should check numbers validity" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Converter service"/>
  <testcase name="Date service should check if a timestamp is in the range limits or not: outside the range" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Date service"/>
  <testcase name="Date service should check if a timestamp is in the range limits or not: inside the range" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Date service"/>
  <testcase name="Date service should check if a timestamp is in the range limits or not: no match with the pattern" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Date service"/>
  <testcase name="HTML lang directive should set default lang if no specific lang is provided" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).HTML lang directive"/>
  <testcase name="HTML lang directive should set lang if another than the default one is provided" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).HTML lang directive"/>
  <testcase name="Message service error should show toast on error without translate arg" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service error should show toast on error with translate arg" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service warning should show toast on warning without translate arg" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service warning should show toast on warning with translate arg" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service success should show toast on success without translate arg" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service success should show toast on success with translate arg" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service buffer should buffer different messages and display them after 300ms delay" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Message service buffer should only display distinct message once" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Message service"/>
  <testcase name="Moment filter should transform timestamp to human readable moment" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Moment filter"/>
  <testcase name="Moment filter should transform date to human readable moment" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Moment filter"/>
  <testcase name="Storage service feedback should return feedback user mail in local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service feedback should save feedback user mail in local storage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service filter should return filter in local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service filter should save filter in local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service filter should remove filter in local storage" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service export should return the export params in local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service export should save the export params in local storage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should add aggregation in local storage" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should generate key without dataset id" time="0.011" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should generate key without preparation id" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should get aggregation from local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should remove aggregation from local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should remove all aggregations for the dataset/preparation from local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service aggregation should save all dataset aggregations for the preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service lookup should get Lookup Datasets" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service lookup should save Lookup Datasets" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service lookup should get Lookup Datasets sort" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service lookup should save Lookup Datasets sort" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service lookup should get Lookup Datasets order" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service lookup should save Lookup Datasets order" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service sort/order should get Datasets sort" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service sort/order should save Datasets sort" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service sort/order should get Preparations sort" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service sort/order should save Preparations sort" time="0.001" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service selected columns should return the selected columns from local storage" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service selected columns should save the selected columns in local storage" time="0.01" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service side panel should return docked value" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service side panel should save docked value" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service OnBoarding should return the tour options from local storage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Storage service OnBoarding should save tour options in local storage" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Storage service"/>
  <testcase name="Text format service lookup-datagrid constraints should return value when it is empty" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service lookup-datagrid constraints should add a span on leading spaces" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service lookup-datagrid constraints should add a span on trailing spaces" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service lookup-datagrid constraints should add a line breaking arrow at the end of each line" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service lookup-datagrid constraints should add 4 spaces for a tab" time="0.045" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service lookup-datagrid constraints should escape tags" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service regex should escape regex special chars with brackets" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service regex should escape regex special chars except star (used as wildcard)" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service date pattern should convert pattern to regexp with escaped special chars" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service date pattern should convert java date pattern to moment pattern" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service date pattern should convert special java date pattern to moment pattern" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service text should replace text with highlighted text" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service text should return highlighted text" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Text format service text should return original text when there is nothing to highlight" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Text format service"/>
  <testcase name="Title service set should set translated title" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Title service"/>
  <testcase name="Title service setStrict should set title" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Title service"/>
  <testcase name="Title service reset should reset title" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Title service"/>
  <testcase name="Datasets actions service dispatch should change sort" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should fetch all datasets" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should clone dataset" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should add dataset to the favorite list" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should update dataset" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should remove dataset" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should rename dataset" time="0.009" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should NOT rename dataset" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should edit TCOMP dataset" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should create dataset with payload model" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should create dataset with default type" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="Datasets actions service dispatch should open dataset via workflow service" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Datasets actions service"/>
  <testcase name="External actions service dispatch should open window" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).External actions service"/>
  <testcase name="External actions service dispatch should open without args" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).External actions service"/>
  <testcase name="Inventory actions service dispatch should change inventory list display mode" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory actions service"/>
  <testcase name="Inventory actions service dispatch should enable edit mode" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory actions service"/>
  <testcase name="Inventory actions service dispatch should disable edit mode" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Inventory actions service"/>
  <testcase name="Menu actions service dispatch should change route" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service dispatch should change route with folder parameters" time="0.013" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service dispatch should change route with current folder parameters" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service dispatch should change route with preparation id" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service executeRouterAction should call $state go" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service executeRouterAction should open in new tab on ctrl-click" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service executeRouterAction should open in new tab on metaKey-click" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Menu actions service executeRouterAction should open in new tab on mousewheel-click" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Menu actions service"/>
  <testcase name="Modal actions service dispatch should trigger state" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Modal actions service"/>
  <testcase name="Onboarding actions service dispatch should trigger onboarding" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Onboarding actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SORT should set sort in app state" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/FOLDER_REMOVE should remove folder" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/CREATE should toggle preparation creator" time="0.007" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/FOLDER_FETCH should set current folder as the previous route for redirection" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/FOLDER_FETCH should init the folder which id is in url param" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/FOLDER_FETCH should manage fetching flag" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/COPY_MOVE should toggle preparation copy move" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/COPY_MOVE should show copy/move modal" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/COPY_MOVE should store folders after fetching" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SUBMIT_EDIT should disable title edition" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SUBMIT_EDIT should NOT set name if it hasn't change" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SUBMIT_EDIT should NOT set name if it is empty" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SUBMIT_EDIT should set new preparation name" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SUBMIT_EDIT should rename folder" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/SUBMIT_EDIT should set refresh current folder" time="0.005" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/REMOVE should ask confirmation" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/REMOVE should remove preparation" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/REMOVE should refresh current folder" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Preparation actions service dispatch @@preparation/REMOVE should display success message" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Preparation actions service"/>
  <testcase name="Search actions service dispatch should toggle search input" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search actions service"/>
  <testcase name="Search actions service dispatch should change focused section and item indexes" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search actions service"/>
  <testcase name="Search actions service dispatch should do nothing if search input is empty" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search actions service"/>
  <testcase name="Search actions service dispatch should search everywhere if search input is not empty" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search actions service"/>
  <testcase name="Search actions service dispatch should not set search result if search input is out of date" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search actions service"/>
  <testcase name="Search actions service dispatch should search doc if search input is not empty" time="0.004" classname="PhantomJS_2_1_1_(Linux_0_0_0).Search actions service"/>
  <testcase name="Sidepanel actions service dispatch should toggle sidepanel" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Sidepanel actions service"/>
  <testcase name="Sidepanel actions service dispatch should save docked state in local storage" time="0.003" classname="PhantomJS_2_1_1_(Linux_0_0_0).Sidepanel actions service"/>
  <testcase name="Settings actions service dispatch should dispatch to all action handlers" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Settings actions service"/>
  <testcase name="Settings actions service createDispatcher should create a function that dispatch" time="0.006" classname="PhantomJS_2_1_1_(Linux_0_0_0).Settings actions service"/>
  <testcase name="Settings service refreshSettings should get remote settings and update local settings" time="0.012" classname="PhantomJS_2_1_1_(Linux_0_0_0).Settings service"/>
  <testcase name="Settings service setSettings should merge settings" time="0.008" classname="PhantomJS_2_1_1_(Linux_0_0_0).Settings service"/>
  <testcase name="Settings service clearSettings should reset settings" time="0.002" classname="PhantomJS_2_1_1_(Linux_0_0_0).Settings service"/>
  <system-out>
    <![CDATA[PhantomJS 2.1.1 (Linux 0.0.0) WARN: 'Warning: Accessing PropTypes via the main React package is deprecated, and will be removed in  React v16.0. Use the latest available v15.* prop-types package from npm instead. For info on usage, compatibility, migration and more, see https://fb.me/prop-types-docs'
,PhantomJS 2.1.1 (Linux 0.0.0) WARN: 'Warning: Accessing createClass via the main React package is deprecated, and will be removed in React v16.0. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class v15.* is available on npm as a temporary, drop-in replacement. For more info see https://fb.me/react-create-class'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Invalid argument supplied to oneOfType. Expected an array of check functions, but received string at index 0.'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Failed prop type: Invalid prop `renderers.ActionBar` of type `function` supplied to `Toolbar`, expected a single ReactElement.
    in Toolbar (created by ListToolbar)
    in ListToolbar (created by List)
    in div (created by List)
    in List (created by Translate(List))
    in Translate(List) (created by Translated(Translate(List)))
    in I18nextProvider (created by Translated(Translate(List)))
    in Translated(Translate(List))'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Unknown prop `tooltipLabel` on <button> tag. Remove this prop from the element. For details, see https://fb.me/react-unknown-prop
    in button (created by Button)
    in Button (created by SplitButton)
    in div (created by ButtonGroup)
    in ButtonGroup (created by Dropdown)
    in Dropdown (created by Uncontrolled(Dropdown))
    in Uncontrolled(Dropdown) (created by SplitButton)
    in SplitButton (created by ActionSplitDropdown)
    in ActionSplitDropdown (created by SwitchActions)
    in div (created by Content)
    in Content (created by SwitchActions)
    in SwitchActions (created by ActionBar)
    in nav (created by ActionBar)
    in ActionBar (created by Toolbar)
    in div (created by Toolbar)
    in Toolbar (created by ListToolbar)
    in ListToolbar (created by List)
    in div (created by List)
    in List (created by Translate(List))
    in Translate(List) (created by Translated(Translate(List)))
    in I18nextProvider (created by Translated(Translate(List)))
    in Translated(Translate(List))'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Failed prop type: The prop `label` is marked as required in `ActionButton`, but its value is `undefined`.
    in ActionButton (created by Action)
    in Action (created by Typeahead)
    in Typeahead (created by Search)
    in form (created by Search)
    in li (created by Search)
    in Search (created by HeaderBar)
    in ul (created by HeaderBar)
    in nav (created by HeaderBar)
    in HeaderBar (created by Translate(HeaderBar))
    in Translate(HeaderBar) (created by Translated(Translate(HeaderBar)))
    in I18nextProvider (created by Translated(Translate(HeaderBar)))
    in Translated(Translate(HeaderBar))'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Unknown prop `tooltipPlacement` on <button> tag. Remove this prop from the element. For details, see https://fb.me/react-unknown-prop
    in button (created by Button)
    in Button (created by SplitButton)
    in div (created by ButtonGroup)
    in ButtonGroup (created by Dropdown)
    in Dropdown (created by Uncontrolled(Dropdown))
    in Uncontrolled(Dropdown) (created by SplitButton)
    in SplitButton (created by ActionSplitDropdown)
    in ActionSplitDropdown (created by Help)
    in li (created by Help)
    in Help (created by HeaderBar)
    in ul (created by HeaderBar)
    in nav (created by HeaderBar)
    in HeaderBar (created by Translate(HeaderBar))
    in Translate(HeaderBar) (created by Translated(Translate(HeaderBar)))
    in I18nextProvider (created by Translated(Translate(HeaderBar)))
    in Translated(Translate(HeaderBar))'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Failed prop type: Invalid prop `renderers.Action` supplied to `SidePanel`, expected a ReactNode.
    in SidePanel (created by Translate(SidePanel))
    in Translate(SidePanel) (created by Translated(Translate(SidePanel)))
    in I18nextProvider (created by Translated(Translate(SidePanel)))
    in Translated(Translate(SidePanel))'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Failed prop type: Invalid prop `type` of value `@@router/GO_CURRENT_FOLDER` supplied to `Button`, expected one of ["button","reset","submit"].
    in Button (created by ActionButton)
    in ActionButton (created by Action)
    in Action (created by SidePanel)
    in li (created by SidePanel)
    in ul (created by SidePanel)
    in nav (created by SidePanel)
    in SidePanel (created by Translate(SidePanel))
    in Translate(SidePanel) (created by Translated(Translate(SidePanel)))
    in I18nextProvider (created by Translated(Translate(SidePanel)))
    in Translated(Translate(SidePanel))'
,PhantomJS 2.1.1 (Linux 0.0.0) ERROR: 'Warning: Failed prop type: Invalid prop `type` of value `@@router/GO` supplied to `Button`, expected one of ["button","reset","submit"].
    in Button (created by ActionButton)
    in ActionButton (created by Action)
    in Action (created by SidePanel)
    in li (created by SidePanel)
    in ul (created by SidePanel)
    in nav (created by SidePanel)
    in SidePanel (created by Translate(SidePanel))
    in Translate(SidePanel) (created by Translated(Translate(SidePanel)))
    in I18nextProvider (created by Translated(Translate(SidePanel)))
    in Translated(Translate(SidePanel))'
,PhantomJS 2.1.1 (Linux 0.0.0) WARN: 'Deprecation warning: value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.
Arguments: 
[0] _isAMomentObject: true, _isUTC: false, _useUTC: false, _l: undefined, _i: 03-30-2015 08:06, _f: undefined, _strict: undefined, _locale: [object Object]
undefined'

]]>
  </system-out>
  <system-err/>
</testsuite>