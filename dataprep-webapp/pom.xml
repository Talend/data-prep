<!--
  ~ ============================================================================
  ~ Copyright (C) 2006-2016 Talend Inc. - www.talend.com
  ~
  ~ This source code is available under agreement available at
  ~ https://github.com/Talend/data-prep/blob/master/LICENSE
  ~
  ~ You should have received a copy of the agreement
  ~ along with this program; if not, write to Talend SA
  ~ 9 rue Pages 92150 Suresnes, France
  ~
  ~ ============================================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.talend.dataprep</groupId>
        <artifactId>dataprep-parent</artifactId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>
    <artifactId>dataprep-webapp</artifactId>
    <packaging>pom</packaging>

    <name>dataprep-webapp</name>

    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>
    <properties>
        <docker.image.name>kkarczmarczyk/node-yarn</docker.image.name>
        <docker.path.dataprep>/data-prep</docker.path.dataprep>
        <node.version>v7.7.4</node.version>
        <yarn.version>v0.27.5</yarn.version>
        <git.branch.name></git.branch.name>
        <git.commit.id.abbrev></git.commit.id.abbrev>
    </properties>
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <property>
                    <name>!use.docker.tool</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>install node and yarn</id>
                                <goals>
                                    <goal>install-node-and-yarn</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>${node.version}</nodeVersion>
                                    <yarnVersion>${yarn.version}</yarnVersion>
                                </configuration>
                            </execution>
                            <execution>
                                <id>yarn install</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>install --force --prefer-offline</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>yarn run build:dist</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>run build:dist</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>yarn test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>test</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.5.3</version>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>full-clean</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>2.4.1</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>bin</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                                <fileset>
                                    <directory>node</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                                <fileset>
                                    <directory>node_modules</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <property>
                    <name>use.docker.tool</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker pull ${docker.image.name}</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>pre-clean</phase>
                                <configuration>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>pull</argument>
                                        <argument>${docker.image.name}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>(docker) yarn install</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>run</argument>
                                        <argument>-v</argument>
                                        <argument>${basedir}:${docker.path.dataprep}</argument>
                                        <argument>--rm=true</argument>
                                        <argument>${docker.image.name}</argument>
                                        <argument>/bin/sh</argument>
                                        <argument>-c</argument>
                                        <argument>cd ${docker.path.dataprep} &amp;&amp; yarn install --force</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!-- generate the dist application (it is not used for the tests) but during the docker packaging it is and it a good test to know the build passes. -->
                            <execution>
                                <id>(docker) yarn run build:dist</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>run</argument>
                                        <argument>-v</argument>
                                        <argument>${basedir}:${docker.path.dataprep}</argument>
                                        <argument>--rm=true</argument>
                                        <argument>${docker.image.name}</argument>
                                        <argument>/bin/sh</argument>
                                        <argument>-c</argument>
                                        <argument>cd ${docker.path.dataprep} &amp;&amp; yarn run build:dist</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>(docker) yarn run test:ci</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <executable>docker</executable>
                                    <arguments>
                                        <argument>run</argument>
                                        <argument>-v</argument>
                                        <argument>${basedir}:${docker.path.dataprep}</argument>
                                        <argument>--rm=true</argument>
                                        <argument>${docker.image.name}</argument>
                                        <argument>/bin/sh</argument>
                                        <argument>-c</argument>
                                        <argument>cd ${docker.path.dataprep} &amp;&amp; yarn run test:ci</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.12.4</version>
                        <executions>
                            <!-- This is a hack to get Jenkins to publish Karma test results when running a Maven project: we run 0 surefire tests, so Jenkins publishes the report of the Karma tests. -->
                            <execution>
                                <id>dummySureFire</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.5.3</version>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-ci</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <docker.image.name>localhost:5000/talend/${project.name}:${project.version}-${git.branch.name}-${git.commit.id.abbrev}</docker.image.name>
                <stack.param.name>DataPrepWebappFQIN</stack.param.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

